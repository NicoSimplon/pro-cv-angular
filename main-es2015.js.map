{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/core-js/internals/a-function.js","./node_modules/core-js/internals/a-possible-prototype.js","./node_modules/core-js/internals/add-to-unscopables.js","./node_modules/core-js/internals/an-instance.js","./node_modules/core-js/internals/an-object.js","./node_modules/core-js/internals/array-includes.js","./node_modules/core-js/internals/array-method-uses-to-length.js","./node_modules/core-js/internals/call-with-safe-iteration-closing.js","./node_modules/core-js/internals/check-correctness-of-iteration.js","./node_modules/core-js/internals/classof-raw.js","./node_modules/core-js/internals/classof.js","./node_modules/core-js/internals/collection-strong.js","./node_modules/core-js/internals/collection.js","./node_modules/core-js/internals/copy-constructor-properties.js","./node_modules/core-js/internals/correct-prototype-getter.js","./node_modules/core-js/internals/create-iterator-constructor.js","./node_modules/core-js/internals/create-non-enumerable-property.js","./node_modules/core-js/internals/create-property-descriptor.js","./node_modules/core-js/internals/define-iterator.js","./node_modules/core-js/internals/descriptors.js","./node_modules/core-js/internals/document-create-element.js","./node_modules/core-js/internals/dom-iterables.js","./node_modules/core-js/internals/enum-bug-keys.js","./node_modules/core-js/internals/export.js","./node_modules/core-js/internals/fails.js","./node_modules/core-js/internals/freezing.js","./node_modules/core-js/internals/function-bind-context.js","./node_modules/core-js/internals/get-built-in.js","./node_modules/core-js/internals/get-iterator-method.js","./node_modules/core-js/internals/global.js","./node_modules/core-js/internals/has.js","./node_modules/core-js/internals/hidden-keys.js","./node_modules/core-js/internals/html.js","./node_modules/core-js/internals/ie8-dom-define.js","./node_modules/core-js/internals/indexed-object.js","./node_modules/core-js/internals/inherit-if-required.js","./node_modules/core-js/internals/inspect-source.js","./node_modules/core-js/internals/internal-metadata.js","./node_modules/core-js/internals/internal-state.js","./node_modules/core-js/internals/is-array-iterator-method.js","./node_modules/core-js/internals/is-forced.js","./node_modules/core-js/internals/is-object.js","./node_modules/core-js/internals/is-pure.js","./node_modules/core-js/internals/iterate.js","./node_modules/core-js/internals/iterators-core.js","./node_modules/core-js/internals/iterators.js","./node_modules/core-js/internals/native-symbol.js","./node_modules/core-js/internals/native-weak-map.js","./node_modules/core-js/internals/object-create.js","./node_modules/core-js/internals/object-define-properties.js","./node_modules/core-js/internals/object-define-property.js","./node_modules/core-js/internals/object-get-own-property-descriptor.js","./node_modules/core-js/internals/object-get-own-property-names.js","./node_modules/core-js/internals/object-get-own-property-symbols.js","./node_modules/core-js/internals/object-get-prototype-of.js","./node_modules/core-js/internals/object-keys-internal.js","./node_modules/core-js/internals/object-keys.js","./node_modules/core-js/internals/object-property-is-enumerable.js","./node_modules/core-js/internals/object-set-prototype-of.js","./node_modules/core-js/internals/object-to-string.js","./node_modules/core-js/internals/own-keys.js","./node_modules/core-js/internals/path.js","./node_modules/core-js/internals/redefine-all.js","./node_modules/core-js/internals/redefine.js","./node_modules/core-js/internals/require-object-coercible.js","./node_modules/core-js/internals/set-global.js","./node_modules/core-js/internals/set-species.js","./node_modules/core-js/internals/set-to-string-tag.js","./node_modules/core-js/internals/shared-key.js","./node_modules/core-js/internals/shared-store.js","./node_modules/core-js/internals/shared.js","./node_modules/core-js/internals/string-multibyte.js","./node_modules/core-js/internals/to-absolute-index.js","./node_modules/core-js/internals/to-indexed-object.js","./node_modules/core-js/internals/to-integer.js","./node_modules/core-js/internals/to-length.js","./node_modules/core-js/internals/to-object.js","./node_modules/core-js/internals/to-primitive.js","./node_modules/core-js/internals/to-string-tag-support.js","./node_modules/core-js/internals/uid.js","./node_modules/core-js/internals/use-symbol-as-uid.js","./node_modules/core-js/internals/well-known-symbol.js","./node_modules/core-js/modules/es.array.iterator.js","./node_modules/core-js/modules/es.map.js","./node_modules/core-js/modules/es.object.to-string.js","./node_modules/core-js/modules/es.string.iterator.js","./node_modules/core-js/modules/web.dom-collections.iterator.js","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/accueil/accueil.component.ts","./src/app/accueil/accueil.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/experiences/add-new-xp/add-new-xp.component.ts","./src/app/experiences/add-new-xp/add-new-xp.component.html","./src/app/experiences/delete-xp/delete-xp.component.ts","./src/app/experiences/delete-xp/delete-xp.component.html","./src/app/experiences/experiences.component.ts","./src/app/experiences/experiences.component.html","./src/app/experiences/update-xp/update-xp.component.ts","./src/app/experiences/update-xp/update-xp.component.html","./src/app/experiences/xp/xp.component.ts","./src/app/experiences/xp/xp.component.html","./src/app/follow-me/follow-me.component.ts","./src/app/follow-me/follow-me.component.html","./src/app/formations/add-formation/add-formation.component.ts","./src/app/formations/add-formation/add-formation.component.html","./src/app/formations/delete-formation/delete-formation.component.ts","./src/app/formations/delete-formation/delete-formation.component.html","./src/app/formations/formation/formation.component.ts","./src/app/formations/formation/formation.component.html","./src/app/formations/formations.component.ts","./src/app/formations/formations.component.html","./src/app/formations/update-formation/update-formation.component.ts","./src/app/formations/update-formation/update-formation.component.html","./src/app/hobbies/add-hobby/add-hobby.component.ts","./src/app/hobbies/add-hobby/add-hobby.component.html","./src/app/hobbies/delete-hobby/delete-hobby.component.ts","./src/app/hobbies/delete-hobby/delete-hobby.component.html","./src/app/hobbies/hobbies.component.ts","./src/app/hobbies/hobbies.component.html","./src/app/hobbies/hobby/hobby.component.ts","./src/app/hobbies/hobby/hobby.component.html","./src/app/hobbies/update-hobby/update-hobby.component.ts","./src/app/hobbies/update-hobby/update-hobby.component.html","./src/app/identification/display-adress/display-adress.component.ts","./src/app/identification/display-adress/display-adress.component.html","./src/app/identification/display-email/display-email.component.ts","./src/app/identification/display-email/display-email.component.html","./src/app/identification/display-phone/display-phone.component.ts","./src/app/identification/display-phone/display-phone.component.html","./src/app/identification/display-photo/display-photo.component.ts","./src/app/identification/display-photo/display-photo.component.html","./src/app/identification/identification.component.ts","./src/app/identification/identification.component.html","./src/app/identification/update-adress/update-adress.component.ts","./src/app/identification/update-adress/update-adress.component.html","./src/app/identification/update-phone/update-phone.component.ts","./src/app/identification/update-phone/update-phone.component.html","./src/app/identification/update-photo/update-photo.component.ts","./src/app/identification/update-photo/update-photo.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/models/Authentification.ts","./src/app/models/EditMode.ts","./src/app/models/EmailMessage.ts","./src/app/models/Formation.ts","./src/app/models/Hobby.ts","./src/app/models/ModifiedUser.ts","./src/app/models/Phone.ts","./src/app/models/Photo.ts","./src/app/models/Project.ts","./src/app/models/Skill.ts","./src/app/models/SkillGroup.ts","./src/app/models/Techno.ts","./src/app/models/XpPro.ts","./src/app/projects/add-project/add-project.component.ts","./src/app/projects/add-project/add-project.component.html","./src/app/projects/delete-project/delete-project.component.ts","./src/app/projects/delete-project/delete-project.component.html","./src/app/projects/project/project.component.ts","./src/app/projects/project/project.component.html","./src/app/projects/projects.component.ts","./src/app/projects/projects.component.html","./src/app/projects/update-project/update-project.component.ts","./src/app/projects/update-project/update-project.component.html","./src/app/services/auth.service.ts","./src/app/services/connexion-guard.service.ts","./src/app/services/private-services.service.ts","./src/app/services/public-services.service.ts","./src/app/skills/add-skill-group/add-skill-group.component.ts","./src/app/skills/add-skill-group/add-skill-group.component.html","./src/app/skills/delete-skill-group/delete-skill-group.component.ts","./src/app/skills/delete-skill-group/delete-skill-group.component.html","./src/app/skills/skill-group-display/skill-group-display.component.ts","./src/app/skills/skill-group-display/skill-group-display.component.html","./src/app/skills/skills.component.ts","./src/app/skills/skills.component.html","./src/app/skills/update-skill-group/update-skill-group.component.ts","./src/app/skills/update-skill-group/update-skill-group.component.html","./src/app/technos/add-techno/add-techno.component.ts","./src/app/technos/add-techno/add-techno.component.html","./src/app/technos/delete-techno/delete-techno.component.ts","./src/app/technos/delete-techno/delete-techno.component.html","./src/app/technos/techno/techno.component.ts","./src/app/technos/techno/techno.component.html","./src/app/technos/technos.component.ts","./src/app/technos/technos.component.html","./src/app/technos/update-techno/update-techno.component.ts","./src/app/technos/update-techno/update-techno.component.html","./src/app/utils/manage-image.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACJA,eAAe,mBAAO,CAAC,6EAAwB;;AAE/C;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACNA,sBAAsB,mBAAO,CAAC,6FAAgC;AAC9D,aAAa,mBAAO,CAAC,qFAA4B;AACjD,2BAA2B,mBAAO,CAAC,uGAAqC;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACJA,eAAe,mBAAO,CAAC,6EAAwB;;AAE/C;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACNA,sBAAsB,mBAAO,CAAC,6FAAgC;AAC9D,eAAe,mBAAO,CAAC,6EAAwB;AAC/C,sBAAsB,mBAAO,CAAC,6FAAgC;;AAE9D,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,YAAY,eAAe;AAChC;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA,kBAAkB,mBAAO,CAAC,iFAA0B;AACpD,YAAY,mBAAO,CAAC,qEAAoB;AACxC,UAAU,mBAAO,CAAC,iEAAkB;;AAEpC;AACA;;AAEA,6BAA6B,UAAU;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb,yCAAyC,iCAAiC;AAC1E;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;AC1BA,eAAe,mBAAO,CAAC,6EAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA,sBAAsB,mBAAO,CAAC,6FAAgC;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS,EAAE;AACzD,CAAC,gBAAgB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,GAAG,gBAAgB;AACnB;AACA;;;;;;;;;;;;ACrCA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA,4BAA4B,mBAAO,CAAC,qGAAoC;AACxE,iBAAiB,mBAAO,CAAC,iFAA0B;AACnD,sBAAsB,mBAAO,CAAC,6FAAgC;;AAE9D;AACA;AACA,gDAAgD,kBAAkB,EAAE;;AAEpE;AACA;AACA;AACA;AACA,GAAG,gBAAgB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBa;AACb,qBAAqB,mBAAO,CAAC,uGAAqC;AAClE,aAAa,mBAAO,CAAC,qFAA4B;AACjD,kBAAkB,mBAAO,CAAC,mFAA2B;AACrD,WAAW,mBAAO,CAAC,qGAAoC;AACvD,iBAAiB,mBAAO,CAAC,iFAA0B;AACnD,cAAc,mBAAO,CAAC,yEAAsB;AAC5C,qBAAqB,mBAAO,CAAC,yFAA8B;AAC3D,iBAAiB,mBAAO,CAAC,iFAA0B;AACnD,kBAAkB,mBAAO,CAAC,iFAA0B;AACpD,cAAc,mBAAO,CAAC,6FAAgC;AACtD,0BAA0B,mBAAO,CAAC,uFAA6B;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC;AAClC,oCAAoC;AACpC,cAAc;AACd,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;;ACzLa;AACb,QAAQ,mBAAO,CAAC,uEAAqB;AACrC,aAAa,mBAAO,CAAC,uEAAqB;AAC1C,eAAe,mBAAO,CAAC,6EAAwB;AAC/C,eAAe,mBAAO,CAAC,2EAAuB;AAC9C,6BAA6B,mBAAO,CAAC,6FAAgC;AACrE,cAAc,mBAAO,CAAC,yEAAsB;AAC5C,iBAAiB,mBAAO,CAAC,iFAA0B;AACnD,eAAe,mBAAO,CAAC,6EAAwB;AAC/C,YAAY,mBAAO,CAAC,qEAAoB;AACxC,kCAAkC,mBAAO,CAAC,uHAA6C;AACvF,qBAAqB,mBAAO,CAAC,6FAAgC;AAC7D,wBAAwB,mBAAO,CAAC,iGAAkC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qDAAqD;AACrD;AACA,kDAAkD,iBAAiB,EAAE;AACrE;AACA;AACA,4EAA4E,iCAAiC,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,yDAAyD;;AAE9D;;AAEA;;AAEA;AACA;;;;;;;;;;;;AClGA,UAAU,mBAAO,CAAC,iEAAkB;AACpC,cAAc,mBAAO,CAAC,2EAAuB;AAC7C,qCAAqC,mBAAO,CAAC,+HAAiD;AAC9F,2BAA2B,mBAAO,CAAC,uGAAqC;;AAExE;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;;;;;;;;;;;ACbA,YAAY,mBAAO,CAAC,qEAAoB;;AAExC;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;;;;;;;;;;;;;ACNY;AACb,wBAAwB,mBAAO,CAAC,uFAA6B;AAC7D,aAAa,mBAAO,CAAC,qFAA4B;AACjD,+BAA+B,mBAAO,CAAC,+GAAyC;AAChF,qBAAqB,mBAAO,CAAC,6FAAgC;AAC7D,gBAAgB,mBAAO,CAAC,6EAAwB;;AAEhD,8BAA8B,aAAa;;AAE3C;AACA;AACA,6DAA6D,0CAA0C;AACvG;AACA;AACA;AACA;;;;;;;;;;;;ACfA,kBAAkB,mBAAO,CAAC,iFAA0B;AACpD,2BAA2B,mBAAO,CAAC,uGAAqC;AACxE,+BAA+B,mBAAO,CAAC,+GAAyC;;AAEhF;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb,QAAQ,mBAAO,CAAC,uEAAqB;AACrC,gCAAgC,mBAAO,CAAC,iHAA0C;AAClF,qBAAqB,mBAAO,CAAC,yGAAsC;AACnE,qBAAqB,mBAAO,CAAC,yGAAsC;AACnE,qBAAqB,mBAAO,CAAC,6FAAgC;AAC7D,kCAAkC,mBAAO,CAAC,uHAA6C;AACvF,eAAe,mBAAO,CAAC,2EAAuB;AAC9C,sBAAsB,mBAAO,CAAC,6FAAgC;AAC9D,cAAc,mBAAO,CAAC,yEAAsB;AAC5C,gBAAgB,mBAAO,CAAC,6EAAwB;AAChD,oBAAoB,mBAAO,CAAC,uFAA6B;;AAEzD;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,aAAa;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF,6CAA6C,4CAA4C;AACzF,+CAA+C,4CAA4C;AAC3F,KAAK,qBAAqB,sCAAsC;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;AACA,yCAAyC,kCAAkC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,SAAS,qFAAqF;AACnG;;AAEA;AACA;;;;;;;;;;;;ACzFA,YAAY,mBAAO,CAAC,qEAAoB;;AAExC;AACA;AACA,iCAAiC,MAAM,mBAAmB,UAAU,EAAE,EAAE;AACxE,CAAC;;;;;;;;;;;;ACLD,aAAa,mBAAO,CAAC,uEAAqB;AAC1C,eAAe,mBAAO,CAAC,6EAAwB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA,aAAa,mBAAO,CAAC,uEAAqB;AAC1C,+BAA+B,mBAAO,CAAC,+HAAiD;AACxF,kCAAkC,mBAAO,CAAC,uHAA6C;AACvF,eAAe,mBAAO,CAAC,2EAAuB;AAC9C,gBAAgB,mBAAO,CAAC,+EAAyB;AACj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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\n\nvar defineProperty = Object.defineProperty;\nvar cache = {};\n\nvar thrower = function (it) { throw it; };\n\nmodule.exports = function (METHOD_NAME, options) {\n  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n  if (!options) options = {};\n  var method = [][METHOD_NAME];\n  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n  var argument0 = has(options, 0) ? options[0] : thrower;\n  var argument1 = has(options, 1) ? options[1] : undefined;\n\n  return cache[METHOD_NAME] = !!method && !fails(function () {\n    if (ACCESSORS && !DESCRIPTORS) return true;\n    var O = { length: -1 };\n\n    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n    else O[1] = 1;\n\n    method.call(O, argument0, argument1);\n  });\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/function-bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  // eslint-disable-next-line max-len\n  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n    new NativeConstructor().entries().next();\n  })))) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","module.exports = {};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = false;\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, next, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","module.exports = {};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.4',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.github.io/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","import { ModifiedUser } from './../models/ModifiedUser';\nimport { LoggedUser } from './../models/LoggedUser';\nimport { PrivateServicesService } from './../services/private-services.service';\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { AuthService } from '../services/auth.service';\n\n/**\n * Account component to manage the user's login/password.\n */\n@Component({\n    selector: 'app-account',\n    templateUrl: './account.component.html',\n    styleUrls: ['./account.component.css'],\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    @Input()\n    user: LoggedUser;\n    modifiedUser = new ModifiedUser('', '', '');\n    password: string;\n\n    constructor(private auth: AuthService, private service: PrivateServicesService) {}\n\n    /**\n     * Call a service to update user email and/or password.\n     */\n    updateProfil(): void {\n        this.service.updateUserLogins(this.modifiedUser).pipe(this._scavenger.collect()).subscribe(\n            (profil) => {\n                this.modifiedUser.actualEmail = profil.email;\n                this.sucessMessage = 'Le profil a correctement été mis à jour.';\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n            },\n            (error) => {\n                if (error.status === 403 || error.status === 401) {\n                    this.errorMessage = 'Vous ne pouvez pas accéder à ce service sans être authentifié.';\n                } else {\n                    this.errorMessage = 'Une erreur est survenue lors de la modification du profil.';\n                }\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        if (this.user) {\n            this.modifiedUser.actualEmail = this.user.email;\n            this.modifiedUser.newEmail = this.user.email;\n        }\n    }\n\n    ngOnDestroy(): void {}\n}\n","\n<div class=\"mt-4 mb-4 card bg-dark\" *ngIf=\"user\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle colorTitle\">Modifier le profil</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p>\n                <strong>{{ errorMessage }}</strong>\n            </p>\n        </div>\n        <div class=\"alert alert-succes text-center\" *ngIf=\"sucessMessage\">\n            <p>\n                <strong>{{ sucessMessage }}</strong>\n            </p>\n        </div>\n        <form #form=\"ngForm\" (ngSubmit)=\"updateProfil()\" >\n            <div class=\"form-group\">\n                <label for=\"email\">Nouvelle adresse email : </label>\n                <input type=\"email\" [(ngModel)]=\"modifiedUser.newEmail\" #email=\"ngModel\" class=\"form-control\" id=\"email\" name=\"email\" required />\n                <div class=\"alert alert-danger\" *ngIf=\"(email.dirty || email.touched) && email.errors\" >\n                    Le nouvel email est invalide (Ce champ est obligatoire).\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"pass1\">Nouveau mot de passe :</label>\n                <input type=\"password\" [(ngModel)]=\"modifiedUser.password\" #pass1=\"ngModel\" class=\"form-control\" id=\"pass1\" name=\"pass1\"  pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&'])[^ ]{8,}$\" required />\n                <div class=\"alert alert-danger\" *ngIf=\"(pass1.dirty || pass1.touched) && pass1.errors\">\n                    Ce champ est obligatoire. De préférence le mot de passe doit contenir 8 caractères minimum, dont une majuscule, un chiffre et un caractère spacial.\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"pass2\" >Confirmer le nouveau mot de passe :</label>\n                <input type=\"password\" [(ngModel)]=\"password\" #pass2=\"ngModel\" class=\"form-control\" id=\"pass2\" name=\"pass2\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&'])[^ ]{8,}$\" required />\n                <div class=\"alert alert-danger\" *ngIf=\"((pass2.dirty || pass2.touched) && pass2.errors) || (pass1.value != pass2.value)\">\n                    Les deux mots de passes ne correspondent pas ou sont incorrects.\n                </div>\n            </div>\n            <div class=\"text-center\">\n                <button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg\">\n                    Modifier\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-accueil',\n    templateUrl: './accueil.component.html',\n    styleUrls: ['./accueil.component.css']\n})\nexport class AccueilComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","\n<section class=\"container-fluid\">\n    <div class=\"row mr-3 ml-3\">\n        <div class=\"col-xl-2\">\n            <app-identification [editMode]=false class=\"d-print-table-cell\"></app-identification>\n            <app-follow-me id=\"follow\"></app-follow-me>\n            <app-hobbies id=\"hobbies\" [editMode]=false></app-hobbies>\n        </div>\n        <div class=\"col-xl-2\">\n            <app-technos [editMode]=false></app-technos>\n        </div>\n        <div class=\"col-xl-8\">\n            <div class=\"row\">\n                <div class=\"col-xl-6\">\n                    <app-experiences [editMode]=false></app-experiences>\n                </div>\n                <div class=\"col-xl-6\">\n                    <app-formations [editMode]=false></app-formations>\n                </div>\n                <div class=\"col-xl-12\">\n                    <app-projects [editMode]=false></app-projects>\n                </div>\n                <div class=\"col-xl-12\">\n                    <app-skills [editMode]=false></app-skills>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { LoggedUser } from './models/LoggedUser';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Basic component for the application\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    title = 'Ingénieur d\\'étude et développement Java';\n\n    user: LoggedUser;\n\n    constructor(private service: AuthService) {}\n\n    /**\n     * Clean the user when logout of the application.\n     */\n    disconnect(event: boolean): void {\n        this.user = null;\n    }\n\n    ngOnInit(): void {\n        this.service.user.pipe(this._scavenger.collect()).subscribe(\n            (user) => (this.user = user),\n            () => (this.user = null)\n        );\n    }\n\n    ngOnDestroy(): void {}\n}\n","<header>\n    <section class=\"text-center titleSection\">\n        <h1 class=\"pageTitle\">{{ title }}</h1>\n    </section>\n    <br />\n    <menu class=\"container-fluid\">\n        <app-menu *ngIf=\"user\" [connected]=\"true\" [user]=\"user\"></app-menu>\n        <app-menu *ngIf=\"!user\" [connected]=\"false\" [user]=\"undefined\"></app-menu>\n    </menu>\n    <br />\n\n    <router-outlet></router-outlet>\n</header>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ROUTES } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { AccueilComponent } from './accueil/accueil.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IdentificationComponent } from './identification/identification.component';\nimport { FormationsComponent } from './formations/formations.component';\nimport { HobbiesComponent } from './hobbies/hobbies.component';\nimport { ExperiencesComponent } from './experiences/experiences.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { TechnosComponent } from './technos/technos.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { LoginComponent } from './login/login.component';\nimport { EditComponent } from './edit/edit.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AccountComponent } from './account/account.component';\nimport { XpComponent } from './experiences/xp/xp.component';\nimport { AddNewXpComponent } from './experiences/add-new-xp/add-new-xp.component';\nimport { DeleteXpComponent } from './experiences/delete-xp/delete-xp.component';\nimport { UpdateXpComponent } from './experiences/update-xp/update-xp.component';\nimport { HobbyComponent } from './hobbies/hobby/hobby.component';\nimport { AddHobbyComponent } from './hobbies/add-hobby/add-hobby.component';\nimport { UpdateHobbyComponent } from './hobbies/update-hobby/update-hobby.component';\nimport { DeleteHobbyComponent } from './hobbies/delete-hobby/delete-hobby.component';\nimport { FormationComponent } from './formations/formation/formation.component';\nimport { AddFormationComponent } from './formations/add-formation/add-formation.component';\nimport { UpdateFormationComponent } from './formations/update-formation/update-formation.component';\nimport { DeleteFormationComponent } from './formations/delete-formation/delete-formation.component';\nimport { ProjectComponent } from './projects/project/project.component';\nimport { AddProjectComponent } from './projects/add-project/add-project.component';\nimport { UpdateProjectComponent } from './projects/update-project/update-project.component';\nimport { DeleteProjectComponent } from './projects/delete-project/delete-project.component';\nimport { TechnoComponent } from './technos/techno/techno.component';\nimport { AddTechnoComponent } from './technos/add-techno/add-techno.component';\nimport { UpdateTechnoComponent } from './technos/update-techno/update-techno.component';\nimport { DeleteTechnoComponent } from './technos/delete-techno/delete-techno.component';\nimport { SkillGroupDisplayComponent } from './skills/skill-group-display/skill-group-display.component';\nimport { UpdateSkillGroupComponent } from './skills/update-skill-group/update-skill-group.component';\nimport { DeleteSkillGroupComponent } from './skills/delete-skill-group/delete-skill-group.component';\nimport { AddSkillGroupComponent } from './skills/add-skill-group/add-skill-group.component';\nimport { DisplayAdressComponent } from './identification/display-adress/display-adress.component';\nimport { UpdateAdressComponent } from './identification/update-adress/update-adress.component';\nimport { DisplayPhotoComponent } from './identification/display-photo/display-photo.component';\nimport { UpdatePhotoComponent } from './identification/update-photo/update-photo.component';\nimport { DisplayPhoneComponent } from './identification/display-phone/display-phone.component';\nimport { UpdatePhoneComponent } from './identification/update-phone/update-phone.component';\nimport { DisplayEmailComponent } from './identification/display-email/display-email.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FollowMeComponent } from './follow-me/follow-me.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccueilComponent,\n    IdentificationComponent,\n    FormationsComponent,\n    HobbiesComponent,\n    ExperiencesComponent,\n    ProjectsComponent,\n    TechnosComponent,\n    SkillsComponent,\n    LoginComponent,\n    EditComponent,\n    MenuComponent,\n    AccountComponent,\n    XpComponent,\n    AddNewXpComponent,\n    DeleteXpComponent,\n    UpdateXpComponent,\n    HobbyComponent,\n    AddHobbyComponent,\n    UpdateHobbyComponent,\n    DeleteHobbyComponent,\n    FormationComponent,\n    AddFormationComponent,\n    UpdateFormationComponent,\n    DeleteFormationComponent,\n    ProjectComponent,\n    AddProjectComponent,\n    UpdateProjectComponent,\n    DeleteProjectComponent,\n    TechnoComponent,\n    AddTechnoComponent,\n    UpdateTechnoComponent,\n    DeleteTechnoComponent,\n    SkillGroupDisplayComponent,\n    UpdateSkillGroupComponent,\n    DeleteSkillGroupComponent,\n    AddSkillGroupComponent,\n    DisplayAdressComponent,\n    UpdateAdressComponent,\n    DisplayPhotoComponent,\n    UpdatePhotoComponent,\n    DisplayPhoneComponent,\n    UpdatePhoneComponent,\n    DisplayEmailComponent,\n    FollowMeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(ROUTES),\n    FormsModule,\n    NgbModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { ConnexionGuardService } from './services/connexion-guard.service';\nimport { AccueilComponent } from './accueil/accueil.component';\nimport { LoginComponent } from './login/login.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AccountComponent } from './account/account.component';\n\nexport const ROUTES: Routes = [\n    { path: 'accueil', component: AccueilComponent },\n    { path: 'edit', canActivate: [ConnexionGuardService], component: EditComponent },\n    { path: 'account', canActivate: [ConnexionGuardService], component: AccountComponent },\n    { path: 'login', component: LoginComponent },\n    { path: '', pathMatch: 'full', redirectTo : '/accueil' },\n];\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n/**\n * When log in, the user enter into this comonent to edit the page.\n */\n@Component({\n    selector: 'app-edit',\n    templateUrl: './edit.component.html',\n    styleUrls: ['./edit.component.css'],\n})\nexport class EditComponent implements OnInit {\n\n\n    constructor() {}\n\n\n    ngOnInit(): void {\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-xl-4\">\n            <ngb-accordion [closeOthers]=\"true\" activeIds=\"static-1\">\n                <ngb-panel id=\"static-1\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"sectionTitle\">Modifier le profil</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-identification [editMode]=true></app-identification>\n                    </ng-template>\n                </ngb-panel>\n                <ngb-panel id=\"static-2\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"sectionTitle\">Modifier les centres d'intérêts</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-hobbies [editMode]=true></app-hobbies>\n                    </ng-template>\n                </ngb-panel>\n            </ngb-accordion>\n            <br>\n        </div>\n        <div class=\"col-xl-4\">\n            <ngb-accordion [closeOthers]=\"true\" activeIds=\"static-1\">\n                <ngb-panel id=\"static-1\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"colorTitle sectionTitle\">Modifier les technologies utilisées</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-technos [editMode]=true></app-technos>\n                    </ng-template>\n                </ngb-panel>\n            </ngb-accordion>\n            <br>\n        </div>\n        <div class=\"col-xl-4\">\n            <ngb-accordion [closeOthers]=\"true\" activeIds=\"static-1\">\n                <ngb-panel id=\"static-1\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"colorTitle sectionTitle\">Modifier les formations</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-formations [editMode]=true></app-formations>\n                    </ng-template>\n                </ngb-panel>\n                <ngb-panel id=\"static-2\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"colorTitle sectionTitle\">Modifier les expériences professionnelles</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-experiences [editMode]=true></app-experiences>\n                    </ng-template>\n                </ngb-panel>\n                <ngb-panel id=\"static-3\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"colorTitle sectionTitle\">Modifier les projets</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-projects [editMode]=true></app-projects>\n                    </ng-template>\n                </ngb-panel>\n                <ngb-panel id=\"static-4\">\n                    <ng-template ngbPanelTitle>\n                        <h4 class=\"colorTitle sectionTitle\">Modifier les compétences</h4>\n                    </ng-template>\n                    <ng-template ngbPanelContent>\n                        <app-skills [editMode]=true></app-skills>\n                    </ng-template>\n                </ngb-panel>\n            </ngb-accordion>\n            <br>\n        </div>\n    </div>\n</div>\n","import { XpPro } from './../../models/XpPro';\nimport { Component, OnInit, OnDestroy, EventEmitter, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for creating a nex professional experience.\n */\n@Component({\n    selector: 'app-add-new-xp',\n    templateUrl: './add-new-xp.component.html',\n    styleUrls: ['./add-new-xp.component.css'],\n})\nexport class AddNewXpComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    newExperience = new XpPro('', '', '');\n\n    @Output()\n    create = new EventEmitter<XpPro>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist the new professional experience\n     * and then add it to the list for displaying it.\n     */\n    createXp(): void {\n        this.privService.createXp(this.newExperience).pipe(this._scavenger.collect()).subscribe(\n            (xp) => {\n                this.create.emit(xp);\n                this.sucessMessage =\n                    `L'expérience ${xp.title} a été créée avec succès.`;\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la création de la nouvelle expérience.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"newExperience\">\n    <h4 class=\"sectionTitle colorTitle\">Créer une nouvelle expérience professionnelle</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form1=\"ngForm\" (ngSubmit)=\"createXp()\">\n        <div class=\"form-group\">\n            <label for=\"xpTitle\">Intitullé de l'expérience : </label>\n            <input type=\"text\" [(ngModel)]=\"newExperience.title\" #xpTitle=\"ngModel\" class=\"form-control\" id=\"xpTitle\" name=\"xpTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(xpTitle.dirty || xpTitle.touched) && xpTitle.errors\">\n                Veuillez renseigner un titre pour la nouvelle expérience (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"xpDescription\">Description de l'expérience : </label>\n            <input type=\"text\" [(ngModel)]=\"newExperience.description\" #xpDescription=\"ngModel\" class=\"form-control\" id=\"xpDescription\" name=\"xpDescription\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(xpDescription.dirty || xpDescription.touched) && xpDescription.errors\">\n                Veuillez remplir une description de l'expérience (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"xpPeriod\">Période de l'expérience : </label>\n            <input type=\"text\" [(ngModel)]=\"newExperience.period\" #xpPeriod=\"ngModel\" class=\"form-control\" id=\"xpPeriod\" name=\"xpPeriod\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(xpPeriod.dirty || xpPeriod.touched) && xpPeriod.errors\">\n                Veuillez renseigner la période de cette expérience (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"xpOrder\">Ordre d'affichage de l'expérience : </label>\n            <input type=\"number\" [(ngModel)]=\"newExperience.order\" #xpOrder=\"ngModel\" class=\"form-control\" id=\"xpOrder\" name=\"xpOrder\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(xpOrder.dirty || xpOrder.touched) && xpOrder.errors\">\n                Veuillez définir l'ordre d'affichage de cette expérience (Par défaut elle est de 0).\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form1.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Créer</button>\n        </div>\n    </form>\n    <br>\n</div>\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { XpPro } from './../../models/XpPro';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for deleting a professional experience.\n */\n@Component({\n    selector: 'app-delete-xp',\n    templateUrl: './delete-xp.component.html',\n    styleUrls: ['./delete-xp.component.css'],\n})\nexport class DeleteXpComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n\n    @Input()\n    experience: XpPro;\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    trash = faTrashAlt;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to remove the selected professional experience in the database.\n     */\n    deleteXp(): void {\n        this.privService.deleteXp(this.experience.id).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.delete.emit(`L'expérience professionnelle ${this.experience.title} a été supprimée avec succès.`);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la suppression de l\\'expérience professionnelle.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<ng-template #tipContent>\n    Voulez vous supprimer cette expérience professionnelle ?\n</ng-template>\n<button *ngIf=\"experience\" type=\"button\" (click)=\"deleteXp()\" class=\"btn btn-danger btn-lg\"><fa-icon [icon]=\"trash\" [ngbTooltip]=\"tipContent\" class=\"trashIcon\"></fa-icon></button>\n","import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { XpPro } from '../models/XpPro';\nimport { EditMode } from '../models/EditMode';\nimport { PrivateServicesService } from '../services/private-services.service';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Display the list of professionnal experiences.\n */\n@Component({\n    selector: 'app-experiences',\n    templateUrl: './experiences.component.html',\n    styleUrls: ['./experiences.component.css']\n})\nexport class ExperiencesComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    errorMessage: string;\n    sucessMessage: string;\n\n    experiences: XpPro[];\n\n    selectedXp: XpPro;\n\n    circle = faCircle;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the list of experiences after creating a new one.\n     */\n    addNewXp(event): void {\n        this.experiences.push(event);\n        this.experiences.sort((a, b) => (a.order - b.order));\n    }\n\n    /**\n     * Update the list when an update event is thrown.\n     */\n    updateXp(event: XpPro): void {\n\n        this.experiences.filter(e => e.id === event.id).map(e => e = event);\n        this.experiences.sort((a, b) => (a.order - b.order));\n    }\n\n    /**\n     * When get the delete event this method refresh the list of experiences.\n     */\n    deleteXp(event: string): void {\n        this.getXp();\n        this.sucessMessage = 'Une erreur est survenue lors de la récupération des expériences professionnelles.';\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Call a service to retrieve the complete list of the professional experiences.\n     */\n    getXp(): void {\n        this.service.getXpPro().pipe(this._scavenger.collect()).subscribe(\n            xps => {\n                this.experiences = xps;\n                this.experiences.sort((a, b) => (a.order - b.order));\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la récupération des expériences professionnelles.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        this.getXp();\n    }\n\n    ngOnDestroy(): void {\n    }\n\n}\n","<section *ngIf=\"!editMode\" class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle colorTitle\">Expériences Professionnelles</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p><strong>{{ errorMessage }}</strong></p>\n        </div>\n        <ul *ngFor=\"let xp of experiences; last as isLast\">\n            <p><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon><app-xp [experience]=\"xp\"></app-xp></p>\n            <hr *ngIf=\"!isLast\">\n        </ul>\n    </div>\n</section>\n\n<div *ngIf=\"editMode\" class=\"container\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <app-add-new-xp (create)=\"addNewXp($event)\"></app-add-new-xp>\n    <hr>\n    <div *ngIf=\"experiences\">\n        <div class=\"mb-5\" ngbDropdown>\n            <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Sélectionnez l'élément à modifier</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                <button *ngFor=\"let xp of experiences;\" (click)=\"selectedXp = xp\" ngbDropdownItem>{{ xp.order}} - {{ xp.title }}</button>\n            </div>\n        </div>\n        <app-update-xp [experience]=\"selectedXp\" (update)=\"updateXp($event)\" (delete)=\"deleteXp($event)\"></app-update-xp>\n    </div>\n</div>\n","import { XpPro } from './../../models/XpPro';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for updating an existing professional experience.\n */\n@Component({\n    selector: 'app-update-xp',\n    templateUrl: './update-xp.component.html',\n    styleUrls: ['./update-xp.component.css'],\n})\nexport class UpdateXpComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    @Input()\n    experience: XpPro;\n\n    @Output()\n    update = new EventEmitter<XpPro>(true);\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist the modified values of an existing professional experience.\n     */\n    updateXp(): void {\n        this.privService.updateXp(this.experience).pipe(this._scavenger.collect()).subscribe(\n            (xp) => {\n                this.sucessMessage =\n                    `L'expérience ${xp.title} a été modifiée avec succès.`;\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.update.emit(xp);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la modification de l\\'expérience professionnelle.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Send the delete event to the mother component.\n     *\n     * @param message the notification message sent by the delete component.\n     */\n    deleteXp(message: string) {\n        this.experience = undefined;\n        this.delete.emit(message);\n    }\n\n    ngOnInit(): void {}\n\n    ngOnDestroy(): void {}\n\n}\n","<div *ngIf=\"experience\" class=\"mb-4\">\n    <form #form=\"ngForm\" (ngSubmit)=\"updateXp()\">\n        <h4 class=\"sectionTitle colorTitle\">Modifier cette expérience professionnelle</h4>\n        <br>\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p><strong>{{ errorMessage }}</strong></p>\n        </div>\n        <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n            <p><strong>{{ sucessMessage }}</strong></p>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"modifiedxpTitle\">Intitullé de l'expérience professionnelle : </label>\n            <input type=\"text\" [(ngModel)]=\"experience.title\" #modifiedxpTitle=\"ngModel\" class=\"form-control\" id=\"modifiedxpTitle\" name=\"modifiedxpTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedxpTitle.dirty || modifiedxpTitle.touched) && modifiedxpTitle.errors\">\n                Veuillez renseigner un titre pour l'expérience (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"modifiedxpDescription\">Description de l'expérience professionnelle : </label>\n            <input type=\"text\" [(ngModel)]=\"experience.description\" #modifiedxpDescription=\"ngModel\" class=\"form-control\" id=\"modifiedxpDescription\" name=\"modifiedxpDescription\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedxpDescription.dirty || modifiedxpDescription.touched) && modifiedxpDescription.errors\">\n                Veuillez remplir une description de l'expérience (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"modifiedxpPeriod\">Période de l'expérience professionnelle : </label>\n            <input type=\"text\" [(ngModel)]=\"experience.period\" #modifiedxpPeriod=\"ngModel\" class=\"form-control\" id=\"modifiedxpPeriod\" name=\"modifiedxpPeriod\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedxpPeriod.dirty || modifiedxpPeriod.touched) && modifiedxpPeriod.errors\">\n                Veuillez la période de cette expérience (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"xmodifiedxpOrder\">Ordre d'affichage de l'expérience professionnelle : </label>\n            <input type=\"number\" [(ngModel)]=\"experience.order\" #xmodifiedxpOrder=\"ngModel\" class=\"form-control\" id=\"xmodifiedxpOrder\" name=\"xmodifiedxpOrder\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(xmodifiedxpOrder.dirty || xmodifiedxpOrder.touched) && xmodifiedxpOrder.errors\">\n                Veuillez définir l'ordre d'affichage de cette expérience (Par défaut elle est de 0).\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <p><button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg mr-3\">Modifier</button><app-delete-xp [experience]=\"experience\" (delete)=\"deleteXp($event)\"></app-delete-xp></p>\n        </div>\n        <br>\n    </form>\n</div>\n","import { XpPro } from './../../models/XpPro';\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\n\n/**\n * Component for displaying a single professional experience.\n */\n@Component({\n    selector: 'app-xp',\n    templateUrl: './xp.component.html',\n    styleUrls: ['./xp.component.css'],\n})\nexport class XpComponent implements OnInit, OnDestroy {\n\n    @Input()\n    experience: XpPro;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    ngOnDestroy(): void {}\n\n}\n","<span *ngIf=\"experience\"><i>{{ experience.period }}</i> : <b>{{ experience.title }}</b> : {{ experience.description }}</span>\n","import { Component, OnInit } from '@angular/core';\n\n/**\n * Component to display some links (gitHub, Linkedin)\n */\n@Component({\n    selector: 'app-follow-me',\n    templateUrl: './follow-me.component.html',\n    styleUrls: ['./follow-me.component.css'],\n})\nexport class FollowMeComponent implements OnInit {\n\n    linkedinLink = 'https://www.linkedin.com/in/nicolas-marty-140216153';\n    gitHubLink = 'https://github.com/NicoSimplon';\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<section class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle\">Me suivre</h4>\n    </div>\n    <div class=\"card-body\">\n        <p>\n            <ng-template #infoBulleGit>Lien vers mon profil GiHub</ng-template>\n            <ng-template #infoBulleLinkedin>Lien vers mon profil Linkedin</ng-template>\n            <a href=\"{{ linkedinLink }}\" [ngbTooltip]=\"infoBulleLinkedin\" target=\"_blank\"><img src=\"/assets/logos_liens/LinkedIn.png\" alt=\"logo du réseau social Linkedin\"/></a>\n            <a href=\"{{ gitHubLink }}\" [ngbTooltip]=\"infoBulleGit\" target=\"_blank\"><img src=\"/assets/logos_liens/Github.png\" alt=\"logo de GitHub\"/></a>\n        </p>\n    </div>\n</section>\n","import { Component, OnInit, OnDestroy, EventEmitter, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Formation } from 'src/app/models/Formation';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for creating a new Formation.\n */\n@Component({\n    selector: 'app-add-formation',\n    templateUrl: './add-formation.component.html',\n    styleUrls: ['./add-formation.component.css'],\n})\nexport class AddFormationComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    newFormation = new Formation('', new Date().getFullYear());\n\n    @Output()\n    create = new EventEmitter<Formation>(true);\n\n    constructor(private priService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist the new Formation\n     * and then add it to the list for displaying it.\n     */\n    createFormation(): void {\n        this.priService.createFormation(this.newFormation).pipe(this._scavenger.collect()).subscribe(\n            (formation) => {\n                this.sucessMessage =\n                    `La formation ${formation.title} a été créée avec succès.`;\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.create.emit(formation);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la création de la nouvelle formation.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"newFormation\" class=\"mb-3\">\n    <h4 class=\"sectionTitle colorTitle\">Créer une nouvelle formation</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form1=\"ngForm\" (ngSubmit)=\"createFormation()\">\n        <div class=\"form-group\">\n            <label for=\"formationTitle\">Intitullé de la formation : </label>\n            <input type=\"text\" [(ngModel)]=\"newFormation.title\" #formationTitle=\"ngModel\" class=\"form-control\" id=\"formationTitle\" name=\"formationTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(formationTitle.dirty || formationTitle.touched) && formationTitle.errors\">\n                L'intitulé de la formation est invalide (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"newFormationYear\">Année de la formation : </label>\n            <input type=\"number\" [(ngModel)]=\"newFormation.year\" #newFormationYear=\"ngModel\" class=\"form-control\" id=\"newFormationYear\" name=\"newFormationYear\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(newFormationYear.dirty || newFormationYear.touched) && newFormationYear.errors\">\n                Une formation a nécessairement une année (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form1.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Créer</button>\n        </div>\n        <br>\n    </form>\n</div>\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Formation } from 'src/app/models/Formation';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for deleting a formation.\n */\n@Component({\n    selector: 'app-delete-formation',\n    templateUrl: './delete-formation.component.html',\n    styleUrls: ['./delete-formation.component.css'],\n})\nexport class DeleteFormationComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n\n    @Input()\n    formation: Formation;\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    trash = faTrashAlt;\n\n    constructor(private priService: PrivateServicesService) {}\n\n    /**\n     * Call a service to remove the selected formation in the database.\n     */\n    deleteFormation(): void {\n        this.priService.deleteFormation(this.formation.id).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.delete.emit(`La formation ${this.formation.title} a été supprimée avec succès.`);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la suppression de la formation.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<ng-template #tipContent>\n    Voulez vous supprimer cette formation ?\n</ng-template>\n<button *ngIf=\"formation\" type=\"button\" (click)=\"deleteFormation()\" class=\"btn btn-danger btn-lg\"><fa-icon [icon]=\"trash\" [ngbTooltip]=\"tipContent\" class=\"trashIcon\"></fa-icon></button>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Formation } from 'src/app/models/Formation';\n\n/**\n * Component for displaying a formation.\n */\n@Component({\n    selector: 'app-formation',\n    templateUrl: './formation.component.html',\n    styleUrls: ['./formation.component.css'],\n})\nexport class FormationComponent implements OnInit {\n\n    @Input()\n    formation: Formation;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<span *ngIf=\"formation\"><b>{{ formation.year }}</b> : {{ formation.title }}</span>\n","import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { Formation } from '../models/Formation';\nimport { EditMode } from '../models/EditMode';\nimport { PrivateServicesService } from '../services/private-services.service';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Display the list of formations.\n */\n@Component({\n    selector: 'app-formations',\n    templateUrl: './formations.component.html',\n    styleUrls: ['./formations.component.css']\n})\nexport class FormationsComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    formations: Formation[];\n\n    selectedFormation: Formation;\n\n    circle = faCircle;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the list of formations when a new one is created.\n     */\n    createFormation(newFormation: Formation): void {\n        this.formations.push(newFormation);\n        this.formations.sort((a, b) => (b.year - a.year));\n    }\n\n    /**\n     * Update the list of formations after an existing one has been modified.\n     */\n    updateFormation(modifiedFormation: Formation): void {\n\n        this.formations.filter(f => f.id === modifiedFormation.id)\n            .map(f => f = modifiedFormation);\n\n        this.formations.sort((a, b) => (b.year - a.year));\n    }\n\n    /**\n     * Update the formations list after one is deleted.\n     */\n    deleteFormation(message: string): void {\n        this.getFormations();\n        this.sucessMessage = message;\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Get the complete list of formations\n     */\n    getFormations(): void {\n        this.service.getFormations().pipe(this._scavenger.collect()).subscribe(\n            formations => {\n                this.formations = formations;\n                this.formations.sort((a, b) => (b.year - a.year));\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la récupération des formations.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        this.getFormations();\n    }\n\n    ngOnDestroy(): void {}\n\n}\n","<section *ngIf=\"!editMode\" class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle colorTitle\">Formations / Diplômes :</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p><strong>{{ errorMessage }}</strong></p>\n        </div>\n        <ul *ngFor=\"let formation of formations; last as isLast\">\n            <p><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon><app-formation [formation]=\"formation\"></app-formation></p>\n            <hr *ngIf=\"!isLast\">\n        </ul>\n    </div>\n</section>\n\n<div *ngIf=\"editMode\" class=\"container\">\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <app-add-formation (create)=\"createFormation($event)\"></app-add-formation>\n    <hr>\n    <div *ngIf=\"formations\">\n        <div class=\"mb-5\" ngbDropdown>\n            <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Sélectionnez l'élément à modifier</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                <button *ngFor=\"let formation of formations\" (click)=\"selectedFormation = formation\" ngbDropdownItem>{{ formation.year }} - {{ formation.title }}</button>\n            </div>\n        </div>\n        <app-update-formation *ngIf=\"selectedFormation\" [formation]=\"selectedFormation\" (update)=\"updateFormation($event)\" (delete)=\"deleteFormation($event)\"></app-update-formation>\n    </div>\n</div>\n","import { Formation } from './../../models/Formation';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for updating an existing formation.\n */\n@Component({\n    selector: 'app-update-formation',\n    templateUrl: './update-formation.component.html',\n    styleUrls: ['./update-formation.component.css'],\n})\nexport class UpdateFormationComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    @Input()\n    formation: Formation;\n\n    @Output()\n    update = new EventEmitter<Formation>(true);\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    constructor(private priService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist the modified values of an existing formation.\n     */\n    updateFormation(): void {\n        this.priService.updateFormation(this.formation).pipe(this._scavenger.collect()).subscribe(\n            (formation) => {\n                this.sucessMessage =\n                    `La formation ${formation.title} a été modifiée avec succès.`;\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.update.emit(formation);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la modification de la formation.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Send the delete event to the mother component.\n     *\n     * @param message the notification message sent by the delete component\n     */\n    deleteFormation(message: string) {\n        this.formation = undefined;\n        this.delete.emit(message);\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n\n}\n","<div *ngIf=\"formation\" class=\"mb-4\">\n    <h4 class=\"sectionTitle colorTitle\">Modifier cette formation formation</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form=\"ngForm\" (ngSubmit)=\"updateFormation()\">\n        <div class=\"form-group\">\n            <label for=\"modifiedFormation\">Intitullé de la formation : </label>\n            <input type=\"text\" [(ngModel)]=\"formation.title\" #modifiedFormation=\"ngModel\" class=\"form-control\" id=\"modifiedFormation\" name=\"modifiedFormation\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedFormation.dirty || modifiedFormation.touched) && modifiedFormation.errors\">\n                L'intitulé de la formation est invalide (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"formationYear\">Année de la formation : </label>\n            <input type=\"number\" [(ngModel)]=\"formation.year\" #formationYear=\"ngModel\" class=\"form-control\" id=\"formationYear\" name=\"formationYear\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(formationYear.dirty || formationYear.touched) && formationYear.errors\">\n                Une formation a nécessairement une année (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <p><button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg mr-3\">Modifier</button><app-delete-formation [formation]=\"formation\" (delete)=\"deleteFormation($event)\"></app-delete-formation></p>\n        </div>\n        <br>\n    </form>\n</div>\n","import { PrivateServicesService } from './../../services/private-services.service';\nimport { Component, OnInit, OnDestroy, EventEmitter, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Hobby } from 'src/app/models/Hobby';\n\n/**\n * Hobby creation component.\n */\n@Component({\n    selector: 'app-add-hobby',\n    templateUrl: './add-hobby.component.html',\n    styleUrls: ['./add-hobby.component.css'],\n})\nexport class AddHobbyComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    newHobby = new Hobby('', '');\n\n    @Output()\n    create = new EventEmitter<Hobby>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Create a new Hobby and call a service to persist it.\n     */\n    createHobby(): void {\n        this.privService.createHobby(this.newHobby).pipe(this._scavenger.collect()).subscribe(\n            (hobby) => {\n                this.sucessMessage = 'Le nouveau hobby a été créé avec succès.';\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.create.emit(hobby);\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la création du nouveau hobby.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnDestroy(): void {}\n    ngOnInit(): void {}\n}\n","<div *ngIf=\"newHobby\">\n    <h4 class=\"sectionTitle colorTitle\">Ajouter un nouveau centre d'intérêt :</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form1=\"ngForm\" (ngSubmit)=\"createHobby()\">\n        <div class=\"form-group\">\n            <label for=\"hobbyTitle\">Intitullé du hobby : </label>\n            <input type=\"text\" [(ngModel)]=\"newHobby.title\" #hobbyTitle=\"ngModel\" class=\"form-control\" id=\"hobbyTitle\" name=\"hobbyTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(hobbyTitle.dirty || hobbyTitle.touched) && hobbyTitle.errors\">\n                L'intitulé du hobby est invalide (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"hobbyDescription\">Description du hobby : </label>\n            <input type=\"text\" [(ngModel)]=\"newHobby.description\" #hobbyDescription=\"ngModel\" class=\"form-control\" id=\"hobbyDescription\" name=\"hobbyDescription\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(hobbyDescription.dirty || hobbyDescription.touched) && hobbyDescription.errors\">\n                Veuillez remplir une description du hobby (Ce champ est obligatoire).\n            </div>\n        </div>\n        <br>\n        <div class=\"text-center\">\n            <button [disabled]=\"form1.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Ajouter</button>\n        </div>\n        <br>\n    </form>\n</div>\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Hobby } from 'src/app/models/Hobby';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Component for deleting an hobby.\n */\n@Component({\n    selector: 'app-delete-hobby',\n    templateUrl: './delete-hobby.component.html',\n    styleUrls: ['./delete-hobby.component.css'],\n})\nexport class DeleteHobbyComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n\n    @Input()\n    hobby: Hobby;\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    trash = faTrashAlt;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service and provide it with an ID of the hobby that has to be removed in the database.\n     */\n    deleteHobby(): void {\n        this.privService.deleteHobby(this.hobby.id).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.delete.emit('Le hobby a été supprimé avec succès.');\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la suppression du hobby.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<ng-template #tipContent>\n    Voulez vous supprimer ce centre d'intérêt ?\n</ng-template>\n<button *ngIf=\"hobby\" (click)=\"deleteHobby()\" type=\"button\" class=\"btn btn-danger btn-lg\"><fa-icon [icon]=\"trash\" [ngbTooltip]=\"tipContent\" class=\"trashIcon\"></fa-icon></button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { Hobby } from '../models/Hobby';\nimport { EditMode } from '../models/EditMode';\nimport { PrivateServicesService } from '../services/private-services.service';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Display the list of hobbies.\n */\n@Component({\n    selector: 'app-hobbies',\n    templateUrl: './hobbies.component.html',\n    styleUrls: ['./hobbies.component.css']\n})\nexport class HobbiesComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    hobbies: Hobby[];\n    selectedHobby: Hobby;\n\n    circle = faCircle;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the list of hobbies when a create event is thrown.\n     */\n    createHobby(event: Hobby): void {\n        this.hobbies.push(event);\n    }\n\n    /**\n     * After an hobby has been updated and the update event is received,\n     * the list oh hobbies is updated.\n     *\n     * @param modifiedHobby The modified version of the hobby\n     */\n    updateHobby(modifiedHobby: Hobby): void {\n        this.hobbies.filter(h => h.id === modifiedHobby.id).map(h => h = modifiedHobby);\n    }\n\n    /**\n     * When a delete event is thronw, the list of hobbies is refresh\n     * and a success notification is displayed.\n     */\n    deleteHobby(message: string): void {\n        this.getHobbies();\n        this.sucessMessage = message;\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Get the complete list of hobbies for displaying them\n     */\n    getHobbies(): void {\n        this.service.getHobby().pipe(this._scavenger.collect()).subscribe(\n            (hobbyList) => {\n                this.hobbies = hobbyList;\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la récupération de la liste des hobbies. Réessayez plus tard.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        this.getHobbies();\n    }\n\n    ngOnDestroy(): void {}\n\n}\n","<section *ngIf=\"!editMode\" class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle colorTitle\">Mes centres d'intérêt</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p><strong>{{ errorMessage }}</strong></p>\n        </div>\n        <ul *ngFor=\"let hobby of hobbies;\">\n            <p><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon><app-hobby [hobby]=\"hobby\"></app-hobby></p>\n        </ul>\n    </div>\n</section>\n\n<div *ngIf=\"editMode\" class=\"container\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <app-add-hobby (create)=\"createHobby($event)\"></app-add-hobby>\n    <hr>\n    <div *ngIf=\"hobbies\">\n        <div class=\"mb-5\" ngbDropdown>\n            <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Sélectionnez l'élément à modifier</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                <button *ngFor=\"let hobby of hobbies\" (click)=\"selectedHobby = hobby\" ngbDropdownItem>{{ hobby.id }} - {{ hobby.title }}</button>\n            </div>\n        </div>\n        <br>\n        <app-update-hobby *ngIf=\"selectedHobby\" [hobby]=\"selectedHobby\" (update)=\"updateHobby($event)\" (delete)=\"deleteHobby($event)\"></app-update-hobby>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Hobby } from 'src/app/models/Hobby';\n\n/**\n * Component for display an hobby.\n */\n@Component({\n    selector: 'app-hobby',\n    templateUrl: './hobby.component.html',\n    styleUrls: ['./hobby.component.css'],\n})\nexport class HobbyComponent implements OnInit {\n\n    @Input()\n    hobby: Hobby;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n}\n","<span *ngIf=\"hobby\"><b>{{ hobby.title }}</b> : {{ hobby.description }}</span>\n","import { Hobby } from './../../models/Hobby';\nimport { Component, OnInit, Input, OnDestroy, EventEmitter, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for updating an existing hobby.\n */\n@Component({\n    selector: 'app-update-hobby',\n    templateUrl: './update-hobby.component.html',\n    styleUrls: ['./update-hobby.component.css'],\n})\nexport class UpdateHobbyComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    @Input()\n    hobby: Hobby;\n\n    @Output()\n    update = new EventEmitter<Hobby>();\n\n    @Output()\n    delete = new EventEmitter<string>();\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist a new version of an existing hobby.\n     */\n    updateHobby(): void {\n        this.privService.updateHobby(this.hobby).pipe(this._scavenger.collect()).subscribe(\n            hobby => {\n                this.sucessMessage = 'Le hobby a été modifié avec succès.';\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.update.emit(hobby);\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la modification du hobby.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Send the delete event to the mother component.\n     *\n     * @param message the notification message sent by the delete component\n     */\n    deleteHobby(message: string) {\n        this.hobby = undefined;\n        this.delete.emit(message);\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"hobby\">\n    <h4 class=\"sectionTitle colorTitle\">Modifier ce centre d'intérêt :</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form=\"ngForm\" (ngSubmit)=\"updateHobby()\">\n        <div class=\"form-group\">\n            <label for=\"modifiedHobbyTitle\">Intitullé du hobby : </label>\n            <input type=\"text\" [(ngModel)]=\"hobby.title\" #modifiedHobbyTitle=\"ngModel\" class=\"form-control\" id=\"modifiedHobbyTitle\" name=\"modifiedHobbyTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedHobbyTitle.dirty || modifiedHobbyTitle.touched) && modifiedHobbyTitle.errors\">\n                Veuillez fournir un titre pour le hobby (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"modifiedHobbyDescription\">Description du hobby : </label>\n            <input type=\"text\" [(ngModel)]=\"hobby.description\" #modifiedHobbyDescription=\"ngModel\" class=\"form-control\" id=\"modifiedHobbyDescription\" name=\"modifiedHobbyDescription\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedHobbyDescription.dirty || modifiedHobbyDescription.touched) && modifiedHobbyDescription.errors\">\n                Veuillez fournir une description du hobby (Ce champ est obligatoire).\n            </div>\n        </div>\n        <br>\n        <div class=\"text-center\">\n            <p><button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg mr-3\">Modifier</button><app-delete-hobby [hobby]=\"hobby\" (delete)=\"deleteHobby($event)\"></app-delete-hobby></p>\n        </div>\n        <br>\n    </form>\n</div>\n","import { Adress } from './../../models/Adress';\nimport { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Component for displaying the postal adress.\n */\n@Component({\n    selector: 'app-display-adress',\n    templateUrl: './display-adress.component.html',\n    styleUrls: ['./display-adress.component.css'],\n})\nexport class DisplayAdressComponent implements OnInit {\n\n    @Input()\n    adress: Adress;\n\n    @Input()\n    postalAdress: any;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<!-- <p *ngIf=\"adress\"><fa-icon [icon]=\"postalAdress\" class=\"profilIcons\"></fa-icon> {{ adress.streetNumber }} {{ adress.street }}, <span *ngIf=\"adress.appartment != null && adress.appartment != ''\">{{ adress.appartment }},</span> {{ adress.postalCode }} {{ adress.town | uppercase }}</p> -->\n\n<p *ngIf=\"adress\"><fa-icon [icon]=\"postalAdress\" class=\"profilIcons\"></fa-icon> {{ adress.postalCode }} {{ adress.town | uppercase }}</p>\n","import { EmailMessage } from './../../models/EmailMessage';\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PublicServicesService } from 'src/app/services/public-services.service';\n\n/**\n * Component to display a way to mail me.\n */\n@Component({\n    selector: 'app-display-email',\n    templateUrl: './display-email.component.html',\n    styleUrls: ['./display-email.component.css'],\n})\nexport class DisplayEmailComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    message = new EmailMessage('', '', '');\n\n    constructor(private service: PublicServicesService) {}\n\n    /**\n     * Call a service and send the message from the visitor to my personal email box.\n     */\n    sendMail(): void {\n        this.sucessMessage = undefined;\n        this.errorMessage = undefined;\n        this.service.sendEmail(this.message).pipe(this._scavenger.collect())\n            .subscribe(\n                () => {\n                    this.sucessMessage = 'Merci pour votre message. J\\'y répondrai dès que possible.';\n                    this.message = new EmailMessage('', '', '');\n                },\n                () => {\n                    this.errorMessage = 'Une erreur est survenue lors de l\\'envoie de votre message.\\n'\n                    + 'Veuillez nous excuser pour le désagrément et réessayer plus tard.';\n                }\n            );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"message\" class=\"mt-4\">\n    <h4 class=\"pb-3\">Votre message :</h4>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-succes text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #mailForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"from\">Votre adresse mail : </label>\n            <input type=\"text\" [(ngModel)]=\"message.from\" #from=\"ngModel\" class=\"form-control\" id=\"from\" name=\"from\" aria-describedby=\"emailHelp\" required pattern=\"[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+.[a-zA-Z.]{2,15}\" placeholder=\"exemple : xxx@xxx.fr\" >\n            <small id=\"emailHelp\" class=\"form-text text-muted\"> Vottre adresse mail me sert uniquement à vous répondre, elle n'est ni stockée, ni communiquée.</small>\n            <div class=\"alert alert-danger\" *ngIf=\"(from.dirty || from.touched) && from.errors\">\n                Merci d'indiquer une adresse mail valide afin que je puisse vous répondre.\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"subject\">Objet : </label>\n            <input type=\"text\" [(ngModel)]=\"message.subject\" #subject=\"ngModel\" class=\"form-control\" id=\"subject\" name=\"subject\" required placeholder=\"Le sujet de votre mail\" >\n            <div class=\"alert alert-danger\" *ngIf=\"(subject.dirty || subject.touched) && subject.errors\">\n                Merci d'indiquer le sujet de votre message afin que je puisse vous répondre de manière plus efficace.\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"messageText\">Message : </label>\n            <textarea type=\"text\" [(ngModel)]=\"message.message\" #messageText=\"ngModel\" class=\"form-control\" id=\"messageText\" name=\"messageText\" required placeholder=\"Le contenu de votre mail\" ></textarea>\n            <div class=\"alert alert-danger\" *ngIf=\"(messageText.dirty || messageText.touched) && messageText.errors\">\n                Le contenu de votre message est vide.\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"mailForm.invalid\" type=\"button\" class=\"btn btn-primary btn-lg\" (click)=\"sendMail()\">Envoyer</button>\n        </div>\n    </form>\n</div>\n","import { Phone } from './../../models/Phone';\nimport { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Component to display the phone number.\n */\n@Component({\n    selector: 'app-display-phone',\n    templateUrl: './display-phone.component.html',\n    styleUrls: ['./display-phone.component.css'],\n})\nexport class DisplayPhoneComponent implements OnInit {\n\n    @Input()\n    phone: Phone;\n\n    @Input()\n    phoneIcon: any;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<p *ngIf=\"phone\"><fa-icon [icon]=\"phoneIcon\" class=\"profilIcons\"></fa-icon> {{ phone.phoneNumber }}</p>\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Component for displaying the photography of the profile.\n */\n@Component({\n  selector: 'app-display-photo',\n  templateUrl: './display-photo.component.html',\n  styleUrls: ['./display-photo.component.css']\n})\nexport class DisplayPhotoComponent implements OnInit {\n\n    @Input()\n    photoUrl: string;\n\n    constructor() { }\n\n    ngOnInit(): void {}\n\n}\n","<img class=\"card-img-top\" *ngIf=\"photoUrl\" src=\"{{ photoUrl }}\" alt=\"Photo de profil\" />\n\n","import { Component, OnInit, LOCALE_ID, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { IdentificationDatas } from '../models/IdenthificationDatas';\nimport { Adress } from '../models/Adress';\nimport { EditMode } from '../models/EditMode';\nimport { Photo } from '../models/Photo';\nimport { Phone } from '../models/Phone';\nimport { environment } from 'src/environments/environment';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { faBirthdayCake, faAddressCard, faPhoneAlt, faAt } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * This component gather together the basic information about the CV (ID, adress, ...)\n */\n@Component({\n    selector: 'app-identification',\n    templateUrl: './identification.component.html',\n    styleUrls: ['./identification.component.css'],\n})\nexport class IdentificationComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    // Variables to display my identification informations\n    // or update it\n    basicDatas: IdentificationDatas;\n    adress: Adress;\n    age: number;\n    phoneNumber: Phone;\n    photoPath: Photo;\n    completeUrl: string;\n    emailForm: boolean;\n\n    // FontAwesome icons\n    birthday = faBirthdayCake;\n    postalAdress = faAddressCard;\n    phone = faPhoneAlt;\n    mail = faAt;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the photo path.\n     */\n    updatePhoto(photo: Photo): void {\n        this.basicDatas.photoPath = photo.photoPath;\n        this.photoPath = photo;\n        this.completeUrl = `${environment.backendUrl}${photo.photoPath}`;\n    }\n\n    /**\n     * Refresh the page to donwload the new photo.\n     */\n    updatePhotoImage(event: string): void {\n        location.reload();\n    }\n\n    /**\n     * Update the phone number\n     */\n    updatePhoneNumber(phone: Phone): void {\n        this.phoneNumber = phone;\n        this.basicDatas.phoneNumber = phone.phoneNumber;\n    }\n\n    /**\n     * Update the postal address\n     */\n    updateAdress(adress: Adress): void {\n        this.adress = adress;\n    }\n\n    /**\n     * Get the CV identification datas\n     * (email, firstName, lastName, birthDate, phoneNumber, photo).\n     */\n    getDatas(): void {\n        this.service.getBasicDatas().pipe(this._scavenger.collect()).subscribe(\n            (datas) => {\n                this.basicDatas = datas;\n                this.photoPath = new Photo(this.basicDatas.photoPath);\n                this.completeUrl = `${environment.backendUrl}${this.basicDatas.photoPath}`;\n                this.phoneNumber = new Phone(datas.phoneNumber);\n                // I display my age instead of my birth date\n                // I calculate it so i don't have to update it manualy.\n                this.age = Math.abs(\n                    new Date(\n                        Date.now() - new Date(datas.birthDate).getTime()\n                    ).getUTCFullYear() - 1970\n                );\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue lors de la récupération des données du profil.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Get the postal address.\n     */\n    getAdress(): void {\n        this.service.getAdress().pipe(this._scavenger.collect()).subscribe(\n            (adress) => {\n                this.adress = adress;\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue lors de la récupération de l\\'adresse.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Display or not the contact form.\n     */\n    setVisibleForm(): void {\n        this.emailForm = !this.emailForm;\n    }\n\n    ngOnInit(): void {\n        // Datas initialisation\n        this.getDatas();\n        this.getAdress();\n        this.emailForm = false;\n    }\n\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"!editMode && basicDatas\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"card bg-dark mb-3\">\n        <app-display-photo [photoUrl]='completeUrl' id=\"profilePhoto\" class=\"d-md-none d-lg-none d-xl-block\"></app-display-photo>\n        <div class=\"card-body row\">\n            <div class=\"col-md-6 col-lg-6 d-none d-md-block d-lg-block d-xl-none\">\n                <app-display-photo [photoUrl]='completeUrl' id=\"profilePhoto\"></app-display-photo>\n            </div>\n            <div class=\"col-md-6 col-lg-6 col-xl-12\">\n                <p class=\"nameFontSize text-center\"><b>{{ basicDatas.firstName }} {{ basicDatas.lastName | uppercase }}</b></p>\n                <p><fa-icon [icon]=\"birthday\" class=\"profilIcons\"></fa-icon> {{ age }} ans</p>\n                <app-display-adress [adress]=\"adress\" [postalAdress]=\"postalAdress\"></app-display-adress>\n                <app-display-phone [phone]=\"phoneNumber\" [phoneIcon]=\"phone\"></app-display-phone>\n                <br>\n                <div class=\"text-center contact\">\n                    <ng-template #tipContent>Cliquez pour faire apparaître ou disparaître le formulaire de contact.</ng-template>\n                    <button class=\"btn btn-secondary btn-lg\" type=\"button\" (click)=\"setVisibleForm()\" [ngbTooltip]=\"tipContent\"><fa-icon [icon]=\"mail\" class=\"buttonIcons\"></fa-icon> Me Contacter</button>\n                </div>\n                <div *ngIf=\"emailForm\" class=\"contact\">\n                    <app-display-email></app-display-email>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid\" *ngIf=\"editMode\">\n    <app-update-photo [photo]=\"photoPath\" (update)=\"updatePhoto($event)\" (updateImage)=\"updatePhotoImage($event)\"></app-update-photo>\n    <hr>\n    <app-update-phone [phone]=\"phoneNumber\" (updateNum)=\"updatePhoneNumber($event)\"></app-update-phone>\n    <hr>\n    <app-update-adress [adress]=\"adress\" (updateAddress)=\"updateAdress($event)\"></app-update-adress>\n</div>\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { Adress } from 'src/app/models/Adress';\n\n/**\n * Component for updating the postal adress.\n */\n@Component({\n    selector: 'app-update-adress',\n    templateUrl: './update-adress.component.html',\n    styleUrls: ['./update-adress.component.css'],\n})\nexport class UpdateAdressComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    @Input()\n    adress: Adress;\n\n    @Output()\n    updateAddress = new EventEmitter<Adress>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Update the postal address\n     */\n    updateAdress(): void {\n        this.privService.updateAdress(this.adress).pipe(this._scavenger.collect()).subscribe(\n            (updatedAdress) => {\n                this.adress = updatedAdress;\n                this.sucessMessage =\n                    'L\\'adresse postale a bien été mise à jour.';\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.updateAddress.emit(updatedAdress);\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la mise à jour de l\\'adress postale.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"adress\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form3=\"ngForm\" (ngSubmit)=\"updateAdress()\" class=\"mb-4\">\n        <h4 class=\"sectionTitle\">Modifier l'adresse postale</h4>\n        <br>\n        <div class=\"form-group\">\n            <label for=\"streetNumber\">Nouveau numéro de rue : </label>\n            <input type=\"number\" [(ngModel)]=\"adress.streetNumber\" #streetNumber=\"ngModel\" class=\"form-control\" id=\"streetNumber\" name=\"streetNumber\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(streetNumber.dirty || streetNumber.touched) && streetNumber.errors\">\n                Une adresse a obligatoirement un numéro de rue\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"streetName\">Nouveau nom de rue : </label>\n            <input type=\"text\" [(ngModel)]=\"adress.street\" #streetName=\"ngModel\" class=\"form-control\" id=\"streetName\" name=\"streetName\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(streetName.dirty || streetName.touched) && streetName.errors\">\n                Une adresse a obligatoirement un nom de rue\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"appt\">Nouvel appartement (optionnel) : </label>\n            <input type=\"text\" [(ngModel)]=\"adress.appartment\" #appt=\"ngModel\" class=\"form-control\" id=\"appt\" name=\"appt\" >\n        </div>\n        <div class=\"form-group\">\n            <label for=\"postalCode\">Nouveau code postal : </label>\n            <input type=\"number\" [(ngModel)]=\"adress.postalCode\" #postalCode=\"ngModel\" class=\"form-control\" id=\"postalCode\" name=\"postalCode\" required pattern=\"^[0-9]{5}$\" >\n            <div class=\"alert alert-danger\" *ngIf=\"(postalCode.dirty || postalCode.touched) && postalCode.errors\">\n                Une adresse a obligatoirement un code postal composé de 5 chiffres\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"city\">Nouveau nom de ville : </label>\n            <input type=\"text\" [(ngModel)]=\"adress.town\" #city=\"ngModel\" class=\"form-control\" id=\"city\" name=\"city\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(city.dirty || city.touched) && city.errors\">\n                Une adresse a obligatoirement un nom de ville\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form3.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg\">Modifier</button>\n        </div>\n    </form>\n</div>\n","import { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Phone } from 'src/app/models/Phone';\n\n/**\n * Component for updating the phone number.\n */\n@Component({\n    selector: 'app-update-phone',\n    templateUrl: './update-phone.component.html',\n    styleUrls: ['./update-phone.component.css'],\n})\nexport class UpdatePhoneComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    @Input()\n    phone: Phone;\n\n    @Output()\n    updateNum = new EventEmitter<Phone>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Update the phone number\n     */\n    updatePhoneNumber(): void {\n        this.privService.updatePhoneNumber(this.phone).pipe(this._scavenger.collect()).subscribe(\n            (updatedPhone) => {\n                this.phone = updatedPhone;\n                this.sucessMessage =\n                    'Le numéro de téléphone a été mis à jour avec succès.';\n                setInterval(() => {\n                   this.sucessMessage = undefined;\n                }, 7000);\n                this.updateNum.emit(updatedPhone);\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la mise à jour du numéro de téléphone.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"phone\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form2=\"ngForm\" (ngSubmit)=\"updatePhoneNumber()\" class=\"mb-4\">\n        <h4 class=\"sectionTitle\">Modifier le numéro de téléphone</h4>\n        <br>\n        <div class=\"form-group\">\n            <label for=\"phoneNum\">Nouveau numéro : </label>\n            <input type=\"text\" [(ngModel)]=\"phone.phoneNumber\" #phoneNum=\"ngModel\" class=\"form-control\" id=\"phoneNum\" name=\"phoneNum\" required pattern=\"^(?:(?:\\+|00)33[\\s.-]{0,3}(?:\\(0\\)[\\s.-]{0,3})?|0)[1-9](?:(?:[\\s.-]?\\d{2}){4}|\\d{2}(?:[\\s.-]?\\d{3}){2})$\">\n            <div class=\"alert alert-danger\" *ngIf=\"(phoneNum.dirty || phoneNum.touched) && phoneNum.errors\">\n                Le format du nouveau numéro est invalide. Il doit correspondre au format suivant : 0X.XX.XX.XX.XX\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form2.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg\">Modifier</button>\n        </div>\n    </form>\n</div>\n","import { ManageImage } from 'src/app/utils/manage-image';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Photo } from 'src/app/models/Photo';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for updating the photo path that is stored in the database or\n * the photo itself that is also stored in the database.\n */\n@Component({\n    selector: 'app-update-photo',\n    templateUrl: './update-photo.component.html',\n    styleUrls: ['./update-photo.component.css'],\n})\nexport class UpdatePhotoComponent extends ManageImage implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    @Input()\n    photo: Photo;\n\n    @Output()\n    update = new EventEmitter<Photo>(true);\n\n    @Output()\n    updateImage = new EventEmitter<string>(true);\n\n    constructor(private privService: PrivateServicesService) {\n        super();\n    }\n\n    /**\n     * Update the photo\n     */\n    updatePhoto(): void {\n        this.privService.updatePhotoUrl(this.photo).pipe(this._scavenger.collect()).subscribe(\n            (photo) => {\n                this.sucessMessage =\n                    'Le chemin de la photo a été mis à jour avec succès.';\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.update.emit(photo);\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la mise à jour du chemin de la photo de profil.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Send a new image to change the one stored in database as the profile  photo.\n     */\n    updatePhotoImage(): void {\n        this.formData.append('file', this.fileData);\n        this.privService.updateImage(this.formData, this.photo.imageId).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.sucessMessage = 'La photo de profil a été modifiée avec succès.';\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.updateImage.emit('image mise à jour');\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenu durant le téléchargement, réessayez plus tard.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"photo\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form=\"ngForm\" (ngSubmit)=\"updatePhoto()\" class=\"mb-4\">\n        <h4 class=\"sectionTitle\">Modifier la photo de profil</h4>\n        <br>\n        <div class=\"form-group\">\n            <label for=\"photoPath\">Chemin de la nouvelle photo : </label>\n            <input type=\"text\" [(ngModel)]=\"photo.photoPath\" #photoPath=\"ngModel\" class=\"form-control\" id=\"photoPath\" name=\"photoPath\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(photoPath.dirty || photoPath.touched) && photoPath.errors\">\n                Le chemin de la nouvelle photo est invalide (Ce champ est obligatoire).\n            </div>\n        </div>\n        <br>\n        <div class=\"text-center\">\n            <button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg\">Modifier</button>\n        </div>\n    </form>\n    <form #form4=\"ngForm\" (ngSubmit)=\"updatePhotoImage()\" class=\"mb-4\">\n        <h4 class=\"sectionTitle\">Choisir une nouvelle photo</h4>\n        <br>\n        <div class=\"custom-file\">\n            <input type=\"file\" name=\"image\" (change)=\"fileProgress($event)\" class=\"custom-file-input\" id=\"fileInput\" />\n            <label class=\"custom-file-label\" for=\"fileInput\">Choisissez un fichier</label>\n        </div>\n        <br>\n        <div class=\"image-preview mb-3\" *ngIf=\"previewUrl\">\n            <img [src]=\"previewUrl\" height=\"300\" />\n        </div>\n        <br>\n        <div class=\"form-group text-center\">\n            <button type=\"submit\" class=\"btn btn-success btn-lg\">Télécharger</button>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Authentification } from '../models/Authentification';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Login component. Authentication is required in order to use private services.\n */\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    auth: Authentification = new Authentification();\n\n    errorMessage: string;\n    successMessage: string;\n\n    login = faSignInAlt;\n\n    constructor(private service: AuthService, private router: Router) {}\n\n    /**\n     * Login method to authenticate the user into the back end server.\n     */\n    connect() {\n        this.service.login(this.auth).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.router.navigate(['/edit']);\n            },\n            (error) => {\n                if (error.status === 403) {\n                    this.errorMessage = 'Vos identifiants de connexion sont invalides.';\n                } else {\n                    this.errorMessage = 'Un problème est survenu. Veuillez réessayer plus tard.';\n                }\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngOnDestroy(): void {\n    }\n}\n","<div>\n    <section class=\"container\">\n        <div class=\"card bg-dark pr-5 pl-5\">\n            <div class=\"card-header\">\n                <h2 class=\"sectionTitle\">Se Connecter</h2>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n                    <p><strong>{{ errorMessage }}</strong></p>\n                </div>\n                <br>\n                <form  #form=\"ngForm\" (ngSubmit)=\"connect()\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email : </label>\n                        <input type=\"email\" [(ngModel)]=\"auth.email\" #email=\"ngModel\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Renseigner votre email\" name=\"email\" required pattern=\"[a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+.[a-zA-Z.]{2,15}\">\n                        <small id=\"emailHelp\" class=\"form-text text-muted\">Nous ne communiquerons jamais votre email à qui que ce soit.</small>\n                        <div class=\"alert alert-danger\" *ngIf=\"(email.dirty || email.touched) && email.errors\">\n                            Le champ email est invalide (Ce champ est obligatoire et doit avoir le format mail@mail.com).\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Mot de passe : </label>\n                        <input type=\"password\" [(ngModel)]=\"auth.motDePasse\" #password=\"ngModel\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Mot de passe\" required>\n                        <div class=\"alert alert-danger\" *ngIf=\"(password.dirty || password.touched) && password.errors\">\n                            Le champ mot de passe est invalide (Ce champ est obligatoire).\n                        </div>\n                    </div>\n                    <div class=\"text-center pb-4\">\n                        <button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-primary btn-lg loginIconColor\"><fa-icon [icon]=\"login\" class=\"loginIconSize\"></fa-icon> Se connecter</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Component, OnInit, Output, Input, OnDestroy, EventEmitter } from '@angular/core';\nimport { LoggedUser } from '../models/LoggedUser';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { faEdit, faSignOutAlt, faHome, faUsers } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * This menu component is used for login/logout purpose.\n */\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.css'],\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    @Input()\n    connected: boolean;\n\n    errorMessage: string;\n\n    @Output()\n    deco = new EventEmitter();\n\n    @Input()\n    user: LoggedUser;\n\n    profileVisible = false;\n    public isMenuCollapsed = true;\n\n    // FontAwesome icons\n    edit = faEdit;\n    logout = faSignOutAlt;\n    home = faHome;\n    profil = faUsers;\n\n    loginPage = false;\n\n    constructor(private service: AuthService, private router: Router) {}\n\n    /**\n     * Hide or show the link to go in edit mode.\n     */\n    setVisibility(): void {\n        this.loginPage = !this.loginPage;\n    }\n\n    /**\n     * Display the profile part\n     */\n    editUser(): void {\n        this.profileVisible = !this.profileVisible;\n    }\n\n    /**\n     * Logout of the application back end part\n     * and redirect the user to the main page.\n     */\n    disconnect() {\n        this.service.logout().pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.connected = false;\n                this.user = undefined;\n                this.deco.emit(true);\n            },\n            () => {\n                this.connected = true;\n                this.errorMessage = 'Une erreur est survenue et vous êtes toujours connecté.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n        this.router.navigate(['/accueil']);\n    }\n\n    /**\n     * Check the private service to see if a user is defined.\n     * If it is the user is loggued and the display of the menu\n     * change.\n     */\n    getUser(): void {\n        this.service.user.pipe(this._scavenger.collect()).subscribe(() => (this.connected = true));\n        this.profileVisible = false;\n    }\n\n    ngOnInit(): void {\n        this.getUser();\n    }\n\n    ngOnDestroy(): void {\n    }\n}\n","<section *ngIf=\"connected\">\n    <h2 class=\"sectionTitle\">Mode édition du CV</h2>\n    <ng-template #tipContent>Se déconnecter ?</ng-template>\n    <p>Bienvenue <b>{{ user.firstName }} {{ user.lastName | uppercase }}</b>, <span class=\"pr-3 pl-3\"><a href=\"#\" [ngbTooltip]=\"tipContent\" (click)=\"disconnect()\"><fa-icon [icon]=\"logout\" class=\"logoutIconColor\"></fa-icon></a></span></p>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><b>{{ errorMessage }}</b></p>\n    </div>\n    <br>\n    <div class=\"d-flex justify-content-center\">\n        <nav class=\"btn-group btn-group-toggle d-none d-md-block\">\n            <button class=\"btn btn-secondary\" routerLink=\"/accueil\"><fa-icon [icon]=\"home\" class=\"menuButtonSize\"></fa-icon> Retourner à l'accueil</button>\n            <button class=\"btn btn-secondary\" routerLink=\"/edit\"><fa-icon [icon]=\"edit\" class=\"menuButtonSize\"></fa-icon> Retourner au mode édition</button>\n            <ng-template #tipContent2>Cliquez pour faire apparaitre ou disparaitre le formulaire d'édition du profil</ng-template>\n            <button class=\"btn btn-secondary\" type=\"button\" (click)=\"editUser()\" [ngbTooltip]=\"tipContent2\"><fa-icon [icon]=\"profil\" class=\"menuButtonSize\"></fa-icon> Editer le profil</button>\n        </nav>\n    </div>\n    <div class=\"container\">\n        <nav class=\"navbar navbar-dark bg-dark mb-3 d-sm-block d-md-none\">\n            <button class=\"navbar-toggler\" type=\"button\" (click)=\"isMenuCollapsed = !isMenuCollapsed\">\n                &#9776;\n            </button>\n            <div [ngbCollapse]=\"isMenuCollapsed\" class=\"collapse navbar-collapse\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <!-- Step 4: Close the menu when a link is clicked. -->\n                        <a class=\"nav-link\" routerLink=\"/accueil\" (click)=\"isMenuCollapsed = true\"><fa-icon [icon]=\"home\" class=\"menuButtonSize\"></fa-icon> Retourner à l'accueil</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" routerLink=\"/edit\" (click)=\"isMenuCollapsed = true\"><fa-icon [icon]=\"edit\" class=\"menuButtonSize\"></fa-icon> Retourner au mode édition</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a class=\"nav-link\" (click)=\"isMenuCollapsed = true\" (click)=\"editUser()\"><fa-icon [icon]=\"profil\" class=\"menuButtonSize\"></fa-icon> Editer le profil</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    </div>\n</section>\n\n<section *ngIf=\"!connected\" class=\"p-3\">\n    <div class=\"float-right\">\n        <ng-template #tipContent>Passer en mode édition ?</ng-template>\n        <ng-template #tipContent2>Retourner à la page d'accueil</ng-template>\n        <p *ngIf=\"!loginPage\"><a href=\"#\" routerLink=\"/edit\" (click)=\"setVisibility()\"><fa-icon [icon]=\"edit\" [ngbTooltip]=\"tipContent\" class=\"editIconColor\"></fa-icon></a></p>\n        <p *ngIf=\"loginPage\"><a href=\"#\" routerLink=\"/accueil\" (click)=\"setVisibility()\"><fa-icon [icon]=\"home\" [ngbTooltip]=\"tipContent2\" class=\"editIconColor\"></fa-icon></a></p>\n    </div>\n</section>\n\n<section *ngIf=\"profileVisible && user != undefined\" class=\"container\">\n    <app-account [user]=\"user\"></app-account>\n</section>\n","export class Authentification {\n\n    public email: string;\n    public motDePasse: string;\n\n    constructor() {}\n\n}\n","import { Input } from '@angular/core';\n\n/**\n * This class is meant to identify if th edittion mode has to be displayed or not\n */\nexport class EditMode {\n\n    @Input()\n    public editMode: boolean;\n\n    constructor() {}\n\n}\n","/**\n * Message object to send an email to my personal email box.\n */\nexport class EmailMessage {\n\n    constructor(public from: string, public subject: string, public message: string) {}\n\n}\n","export class Formation {\n\n    id: number;\n\n    constructor(public title: string, public year: number) {}\n\n}\n","export class Hobby {\n\n    public id: number;\n\n    constructor(public title: string, public description: string) {}\n\n}\n","export class ModifiedUser {\n\n    constructor(public actualEmail: string, public newEmail: string, public password: string) {}\n\n}\n","export class Phone {\n\n    public id = 1;\n\n    constructor(public phoneNumber: string) {}\n\n}\n","export class Photo {\n\n    public id = 1;\n    public imageId = 1;\n\n    constructor(public photoPath: string) {}\n\n}\n","export class Project {\n\n    public id: number;\n\n    constructor(public title: string, public description: string) {}\n\n}\n","export class Skill {\n\n    public id: number;\n\n    constructor(public title: string) {}\n\n}\n","import { Skill } from './Skill';\n\nexport class SkillGroup {\n\n    public id: number;\n\n    constructor(public title: string, public skills: Skill[]) {}\n\n}\n","export class Techno {\n\n    public id: number;\n    public order = 0;\n\n    constructor(public title: string, public logoPath: string, public imageId: number) {}\n\n}\n","export class XpPro {\n\n    public id: number;\n    public order = 0;\n\n    constructor(public title: string, public description: string, public period: string) {}\n\n}\n","import { Project } from './../../models/Project';\nimport { Component, OnInit, OnDestroy, EventEmitter, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for creating a new project.\n */\n@Component({\n    selector: 'app-add-project',\n    templateUrl: './add-project.component.html',\n    styleUrls: ['./add-project.component.css'],\n})\nexport class AddProjectComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    newProject = new Project('', '');\n\n    @Output()\n    create = new EventEmitter<Project>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist a new project\n     */\n    createProject(): void {\n        this.privService.createProject(this.newProject)\n            .pipe(\n                this._scavenger.collect()\n            )\n            .subscribe(\n                project => {\n                    this.sucessMessage = `Le nouveau projet ${project.title} a bien été créé.`;\n                    setInterval(() => {\n                        this.sucessMessage = undefined;\n                    }, 7000);\n                    this.create.emit(project);\n                },\n                () => {\n                    this.errorMessage = 'Une erreur est survenue lors de la création du nouveau projet.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"newProject\">\n    <h4 class=\"sectionTitle colorTitle\">Créer un nouveau projet</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form1=\"ngForm\" (ngSubmit)=\"createProject()\">\n        <div class=\"form-group\">\n            <label for=\"projectTitle\">Titre du projet : </label>\n            <input type=\"text\" [(ngModel)]=\"newProject.title\" #projectTitle=\"ngModel\" class=\"form-control\" id=\"projectTitle\" name=\"projectTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(projectTitle.dirty || projectTitle.touched) && projectTitle.errors\">\n                Veuillez renseigner un titre pour ce projet (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"projectDescription\">Description du projet : </label>\n            <input type=\"text\" [(ngModel)]=\"newProject.description\" #projectDescription=\"ngModel\" class=\"form-control\" id=\"projectDescription\" name=\"projectDescription\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(projectDescription.dirty || projectDescription.touched) && projectDescription.errors\">\n                Veuillez remplir une description du projet (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form1.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Ajouter</button>\n        </div>\n        <br>\n    </form>\n</div>\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, OnDestroy, Input, EventEmitter, Output } from '@angular/core';\nimport { Project } from 'src/app/models/Project';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for deleting a project.\n */\n@Component({\n    selector: 'app-delete-project',\n    templateUrl: './delete-project.component.html',\n    styleUrls: ['./delete-project.component.css'],\n})\nexport class DeleteProjectComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    @Input()\n    project: Project;\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    trash = faTrashAlt;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Give the project ID to a service for removing it from the database.\n     */\n    deleteProject(): void {\n        this.privService.deleteProject(this.project.id)\n            .pipe(\n                this._scavenger.collect()\n            )\n            .subscribe(\n                () => {\n                    this.delete.emit(`Le projet ${this.project.title} a bien été supprimé.`);\n                },\n                () => {\n                    this.errorMessage = 'Une erreur est survenue lors de la suppression du projet.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<ng-template #tipContent>\n    Voulez vous supprimer cette formation ?\n</ng-template>\n<button *ngIf=\"project\" type=\"button\" (click)=\"deleteProject()\" class=\"btn btn-danger btn-lg\"><fa-icon [icon]=\"trash\" [ngbTooltip]=\"tipContent\" class=\"trashIcon\"></fa-icon></button>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Project } from 'src/app/models/Project';\n\n/**\n * Component for displaying a project.\n */\n@Component({\n    selector: 'app-project',\n    templateUrl: './project.component.html',\n    styleUrls: ['./project.component.css'],\n})\nexport class ProjectComponent implements OnInit {\n\n    @Input()\n    project: Project;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<span *ngIf=\"project\"><b>{{ project.title }}</b> : {{ project.description }}</span>\n","import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { PrivateServicesService } from './../services/private-services.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { Project } from '../models/Project';\nimport { EditMode } from '../models/EditMode';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Display the list of the projects that i have been involved in.\n */\n@Component({\n    selector: 'app-projects',\n    templateUrl: './projects.component.html',\n    styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    projects: Project[];\n\n    selectedProject: Project;\n\n    circle = faCircle;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the list of projects after a new one has been created.\n     */\n    createProject(project: Project): void {\n        this.projects.push(project);\n    }\n\n    /**\n     * Update the list of projects when an existing one has been updated.\n     */\n    updateProject(project: Project): void {\n        this.projects.filter(p => p.id === project.id).map(p => p = project);\n    }\n\n    /**\n     * Refresh the list of project after on is deleted.\n     */\n    deleteProject(message: string): void {\n        this.getProjects();\n        this.sucessMessage = message;\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Call a service to get the complete list of projects\n     */\n    getProjects(): void {\n        this.service.getProject()\n        .pipe(\n            this._scavenger.collect()\n        )\n        .subscribe(\n            projects => {\n                this.projects = projects;\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue lors de la récupération des projets.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        this.getProjects();\n    }\n\n    ngOnDestroy(): void {}\n\n}\n","<section *ngIf=\"!editMode\" class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle colorTitle\">Projets</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p><strong>{{ errorMessage }}</strong></p>\n        </div>\n        <ul *ngFor=\"let project of projects; last as isLast\">\n            <p><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon><app-project [project]=\"project\"></app-project></p>\n            <hr *ngIf=\"!isLast\">\n        </ul>\n    </div>\n</section>\n\n<div *ngIf=\"editMode\" class=\"container mb-4\">\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <app-add-project (create)=\"createProject($event)\"></app-add-project>\n    <hr>\n    <div *ngIf=\"projects\">\n        <div class=\"mb-5\" ngbDropdown>\n            <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Sélectionnez l'élément à modifier</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                <button *ngFor=\"let project of projects;\" (click)=\"selectedProject = project\" ngbDropdownItem>{{ project.id}} - {{ project.title }}</button>\n            </div>\n        </div>\n        <app-update-project [project]=\"selectedProject\" (update)=\"updateProject($event)\" (delete)=\"deleteProject($event)\"></app-update-project>\n    </div>\n</div>\n\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { Project } from 'src/app/models/Project';\n\n/**\n * Component for updating an existing project.\n */\n@Component({\n    selector: 'app-update-project',\n    templateUrl: './update-project.component.html',\n    styleUrls: ['./update-project.component.css'],\n})\nexport class UpdateProjectComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    @Input()\n    project: Project;\n\n    @Output()\n    update = new EventEmitter<Project>(true);\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to persist modifications to an existing project.\n     */\n    updateProject(): void {\n        this.privService.updateProject(this.project)\n            .pipe(\n                this._scavenger.collect()\n            )\n            .subscribe(\n                project => {\n                    this.sucessMessage = `Le projet ${project.title} a bien été modifié.`;\n                    setInterval(() => {\n                        this.sucessMessage = undefined;\n                    }, 7000);\n                    this.update.emit(project);\n                },\n                () => {\n                    this.errorMessage = 'Une erreur est survenue lors de la modification du projet.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    /**\n     * Send a delete event to the mother component.\n     *\n     * @param message the notification message sent by the delete component\n     */\n    deleteProject(message: string) {\n        this.project = undefined;\n        this.delete.emit(message);\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n\n}\n","<div *ngIf=\"project\">\n    <h4 class=\"sectionTitle colorTitle\">Modifier ce projet</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form=\"ngForm\" (ngSubmit)=\"updateProject()\">\n        <div class=\"form-group\">\n            <label for=\"modifiedProjectTitle\">Titre du projet : </label>\n            <input type=\"text\" [(ngModel)]=\"project.title\" #modifiedProjectTitle=\"ngModel\" class=\"form-control\" id=\"modifiedProjectTitle\" name=\"modifiedProjectTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedProjectTitle.dirty || modifiedProjectTitle.touched) && modifiedProjectTitle.errors\">\n                Veuillez fournir un titre pour le projet (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"modifiedProjectDescription\">Description du projet : </label>\n            <input type=\"text\" [(ngModel)]=\"project.description\" #modifiedProjectDescription=\"ngModel\" class=\"form-control\" id=\"modifiedProjectDescription\" name=\"modifiedProjectDescription\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedProjectDescription.dirty || modifiedProjectDescription.touched) && modifiedProjectDescription.errors\">\n                Veuillez fournir une description du projet (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <p><button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg mr-3\">Modifier</button><app-delete-project [project]=\"project\" (delete)=\"deleteProject($event)\"></app-delete-project></p>\n        </div>\n        <br>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { LoggedUser } from '../models/LoggedUser';\nimport { Subject, Observable } from 'rxjs';\nimport { tap, map, catchError } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Authentification } from '../models/Authentification';\n\n/**\n * Authentication service to the back end private services.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    URL_BACKEND = `${environment.backendUrl}`;\n\n    user = new Subject<LoggedUser>();\n\n    connectedUser: LoggedUser;\n\n    connected: boolean;\n\n    constructor(private _http: HttpClient) { }\n\n    login(auth: Authentification): Observable<LoggedUser> {\n        return this._http.post<LoggedUser>(`${this.URL_BACKEND}/auth`, auth, { withCredentials: true })\n            .pipe(\n                tap((user) => {\n                    this.connected = true;\n                    this.connectedUser = user;\n                })\n            );\n    }\n\n    logout() {\n        return this._http.post(`${this.URL_BACKEND}/logout`, null, { withCredentials: true })\n            .pipe(\n                tap(\n                    () => {\n                        this.connected = false;\n                        this.connectedUser = undefined;\n                        localStorage.removeItem('AUTH-TOKEN');\n                    }\n                )\n            );\n    }\n\n    getUser(): Observable<LoggedUser> {\n        return this._http.get<LoggedUser>(`${this.URL_BACKEND}/me`, { withCredentials: true });\n    }\n\n    isLoggedIn(): Observable<boolean> {\n\n        return this.getUser().pipe(\n            tap(\n                user => {\n                    this.user.next(user);\n                    this.connected = true;\n                }\n            ),\n            map(user => true)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConnexionGuardService implements CanActivate {\n\n    constructor(private router: Router, private authService: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> {\n\n        return this.authService.isLoggedIn()\n            .pipe(\n                catchError(() => of(this.router.parseUrl('/login')))\n            );\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Photo } from '../models/Photo';\nimport { ModifiedUser } from '../models/ModifiedUser';\nimport { Adress } from '../models/Adress';\nimport { Formation } from '../models/Formation';\nimport { Hobby } from '../models/Hobby';\nimport { Skill } from '../models/Skill';\nimport { SkillGroup } from '../models/SkillGroup';\nimport { XpPro } from '../models/XpPro';\nimport { Project } from '../models/Project';\nimport { Techno } from '../models/Techno';\nimport { Phone } from '../models/Phone';\nimport { UserEmail } from '../models/UserEmail';\nimport { ImageDto } from '../models/ImageDto';\n\n/**\n * Private services for admin exclusive use. With these services the admin can update the various datas of the CV (update, create, delete).\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class PrivateServicesService {\n    URL_BACKEND = `${environment.backendUrl}`;\n\n    constructor(private _http: HttpClient) {}\n\n    // Photo Service\n\n    /**\n     * Update the profile photo url persisted into the database.\n     *\n     * @param photo Photo object containing the photo path.\n     */\n    updatePhotoUrl(photo: Photo): Observable<Photo> {\n        return this._http.patch<Photo>(`${this.URL_BACKEND}/photo/update`, photo, {withCredentials: true});\n    }\n\n    // Image Services\n\n    /**\n     * Upload a new image to be stored in the database.\n     * In return we get the new image ID.\n     *\n     * @param image The image that has to be uploaded.\n     */\n    uploadImage(image: FormData): Observable<ImageDto> {\n        return this._http.post<ImageDto>(`${this.URL_BACKEND}/image/uploadFile`, image, {withCredentials: true});\n    }\n\n    /**\n     * Change the image associated with an ID.\n     *\n     * @param newImage the new image\n     * @param imageId the id of the image that has to be modified\n     */\n    updateImage(newImage: FormData, imageId: number): Observable<any> {\n        return this._http.patch(`${this.URL_BACKEND}/image/update/${imageId}`, newImage, { withCredentials: true });\n    }\n\n    /**\n     * Call the back API for deleting the image with the provided ID.\n     *\n     * @param imageId the ID od the image that has to be deleted.\n     */\n    deleteImage(imageId: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/image/delete/${imageId}`, {withCredentials: true});\n    }\n\n    // User Service\n\n    /**\n     * Update users logins data persisted into the database.\n     *\n     * @param user Oject representing an admin user. It is used to modify admin's email and/or password.\n     */\n    updateUserLogins(user: ModifiedUser): Observable<UserEmail> {\n        return this._http.patch<UserEmail>(`${this.URL_BACKEND}/user/update`, user, { withCredentials: true });\n    }\n\n    // Phone Service\n\n    /**\n     * Update the phone number into the database\n     *\n     * @param newNumber Object that contain the new phone number\n     */\n    updatePhoneNumber(newNumber: Phone): Observable<Phone> {\n        return this._http.patch<Phone>(`${this.URL_BACKEND}/phone/update`, newNumber, { withCredentials: true });\n    }\n\n    // Adress Service\n\n    /**\n     * Update differents part of the adress.\n     *\n     * @param newAdress Object representing all the adress parts.\n     */\n    updateAdress(newAdress: Adress): Observable<Adress> {\n        return this._http.patch<Adress>(`${this.URL_BACKEND}/adress/update`, newAdress, { withCredentials: true });\n    }\n\n    // Formation Services\n\n    /**\n     * Create a new formation to be persisted.\n     *\n     * @param newFormation Object representing a formation or a grade.\n     */\n    createFormation(newFormation: Formation): Observable<Formation> {\n        return this._http.post<Formation>(`${this.URL_BACKEND}/formations/add/1`, newFormation, { withCredentials: true });\n    }\n\n    /**\n     * Update differents part of an existing formation.\n     *\n     * @param modifiedFormation Object representing a formation or a grade.\n     */\n    updateFormation(modifiedFormation: Formation): Observable<Formation> {\n        return this._http.patch<Formation>(`${this.URL_BACKEND}/formations/update`, modifiedFormation, { withCredentials: true });\n    }\n\n    /**\n     * Delete an existing formation.\n     *\n     * @param id Id of the formation that has to be deleted.\n     */\n    deleteFormation(id: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/formations/delete/${id}`, { withCredentials: true });\n    }\n\n    // Hobbies Services\n\n    /**\n     * Create a new hobby to be persisted.\n     *\n     * @param newHobby Object representing an hobby.\n     */\n    createHobby(newHobby: Hobby): Observable<Hobby> {\n        return this._http.post<Hobby>(`${this.URL_BACKEND}/hobbies/add/1`, newHobby, { withCredentials: true });\n    }\n\n    /**\n     * Update differents part of an existing hobby.\n     *\n     * @param modifiedHobby Object representing an hobby.\n     */\n    updateHobby(modifiedHobby: Hobby): Observable<Hobby> {\n        return this._http.patch<Hobby>(`${this.URL_BACKEND}/hobbies/update`, modifiedHobby, { withCredentials: true });\n    }\n\n    /**\n     * Delete an existing hobby.\n     *\n     * @param id Id of the hobby that has to be deleted.\n     */\n    deleteHobby(id: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/hobbies/delete/${id}`, { withCredentials: true });\n    }\n\n    // Skill Services\n\n    /**\n     * Create a new skill to be persisted and linked with a skill group.\n     *\n     * @param newHnewSkill Object representing a new skill.\n     */\n    createSkill(newHnewSkill: Skill, groupId: number): Observable<Skill> {\n        return this._http.post<Skill>(`${this.URL_BACKEND}/skills/add-skill/${groupId}`, newHnewSkill, { withCredentials: true });\n    }\n\n    /**\n     * This method is used to remove a single skill from a skill group.\n     * Be aware the skill will be deleted from the database with this operation.\n     *\n     * @param skillId Id od the skill that have to be removed.\n     */\n    deleteSkill(skillId: number): Observable<any> {\n        return this._http.delete<any>(`${this.URL_BACKEND}/skills/delete-skill/${skillId}`, { withCredentials: true });\n    }\n\n    /**\n     * Create a new skill group for persisting it.\n     *\n     * @param newGroup Object representing a new Skill group.\n     */\n    createSkillGroup(newGroup: SkillGroup): Observable<SkillGroup> {\n        return this._http.post<SkillGroup>(`${this.URL_BACKEND}/skills/add-group/1`, newGroup, { withCredentials: true });\n    }\n\n    /**\n     * This method is used to update a skill group datas and/or insides skills. Do not delete skills by this way.\n     * For deleting a skill you have to use the remove method.\n     *\n     * @param modifiedSkillGroup An existing skill group with modified title or modified skills.\n     */\n    updateSkillGroup(modifiedSkillGroup: SkillGroup): Observable<SkillGroup> {\n        return this._http.patch<SkillGroup>(`${this.URL_BACKEND}/skills/update`, modifiedSkillGroup, { withCredentials: true });\n    }\n\n    /**\n     * This method is used to delete a skill group.\n     * Be aware the skills inside this group will be deleted from the database with this operation.\n     *\n     * @param groupId Id od the skill that have to be removed.\n     */\n    deleteSkillGroup(groupId: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/skills/delete-group/${groupId}`, { withCredentials: true });\n    }\n\n    // Professional experience Services\n\n    /**\n     * Create a new experience to be persisted.\n     *\n     * @param newXpPro Object representing a new professional experience.\n     */\n    createXp(newXpPro: XpPro): Observable<XpPro> {\n        return this._http.post<XpPro>(`${this.URL_BACKEND}/experiences/add/1`, newXpPro, { withCredentials: true });\n    }\n\n    /**\n     * update an existing experience.\n     *\n     * @param modifiedXpPro Object representing a professional experience.\n     */\n    updateXp(modifiedXpPro: XpPro): Observable<XpPro> {\n        return this._http.patch<XpPro>(`${this.URL_BACKEND}/experiences/update`, modifiedXpPro, { withCredentials: true });\n    }\n\n    /**\n     * delete an existing experience.\n     *\n     * @param xpId Id of the experience that have to be removed.\n     */\n    deleteXp(xpId: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/experiences/delete/${xpId}`, { withCredentials: true });\n    }\n\n    // Project Services\n\n    /**\n     * Create a new project to be persisted.\n     *\n     * @param newProject Object representing a new project.\n     */\n    createProject(newProject: Project): Observable<Project> {\n        return this._http.post<Project>(`${this.URL_BACKEND}/projects/add/1`, newProject, { withCredentials: true });\n    }\n\n    /**\n     * update an existing project.\n     *\n     * @param modifiedProject Object representing a project.\n     */\n    updateProject(modifiedProject: Project): Observable<Project> {\n        return this._http.patch<Project>(`${this.URL_BACKEND}/projects/update`, modifiedProject, { withCredentials: true });\n    }\n\n    /**\n     * delete an existing project.\n     *\n     * @param projectId Id of the project that have to be removed.\n     */\n    deleteProject(projectId: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/projects/delete/${projectId}`, { withCredentials: true });\n    }\n\n    // Techno Services\n\n    /**\n     * Create a new Techno to be persisted.\n     *\n     * @param newTechno Object representing a new techno.\n     */\n    createTechno(newTechno: Techno): Observable<Techno> {\n        return this._http.post<Techno>(`${this.URL_BACKEND}/technos/add/1`, newTechno, { withCredentials: true });\n    }\n\n    /**\n     * update an existing techno.\n     *\n     * @param modifiedTechno Object representing a techno.\n     */\n    updateTechno(modifiedTechno: Techno): Observable<Techno> {\n        return this._http.patch<Techno>(`${this.URL_BACKEND}/technos/update`, modifiedTechno, { withCredentials: true });\n    }\n\n    /**\n     * delete an existing techno.\n     *\n     * @param technoId Id of the techno that have to be removed.\n     */\n    deleteTechno(technoId: number): Observable<any> {\n        return this._http.delete(`${this.URL_BACKEND}/technos/delete/${technoId}`, { withCredentials: true });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { IdentificationDatas } from '../models/IdenthificationDatas';\nimport { Adress } from '../models/Adress';\nimport { Formation } from '../models/Formation';\nimport { Hobby } from '../models/Hobby';\nimport { XpPro } from '../models/XpPro';\nimport { Project } from '../models/Project';\nimport { SkillGroup } from '../models/SkillGroup';\nimport { Techno } from '../models/Techno';\nimport { EmailMessage } from '../models/EmailMessage';\n\n/**\n * Public services for getting CV datas to display for the visitor.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicServicesService {\n\n    URL_BACKEND = `${environment.backendUrl}`;\n\n    constructor(private _http: HttpClient) { }\n\n    /**\n     * Get basic profile datas\n     */\n    getBasicDatas(): Observable<IdentificationDatas> {\n        return this._http.get<IdentificationDatas>(`${this.URL_BACKEND}/user/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current adress\n     */\n    getAdress(): Observable<Adress> {\n        return this._http.get<Adress>(`${this.URL_BACKEND}/adress/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current list of formations\n     */\n    getFormations(): Observable<Formation[]> {\n        return this._http.get<Formation[]>(`${this.URL_BACKEND}/formations/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current list of hobbies\n     */\n    getHobby(): Observable<Hobby[]> {\n        return this._http.get<Hobby[]>(`${this.URL_BACKEND}/hobbies/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current list of professional experiences\n     */\n    getXpPro(): Observable<XpPro[]> {\n        return this._http.get<XpPro[]>(`${this.URL_BACKEND}/experiences/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current list of project that i have benn involved in.\n     */\n    getProject(): Observable<Project[]> {\n        return this._http.get<Project[]>(`${this.URL_BACKEND}/projects/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current list of skills (a list of group of skills).\n     */\n    getSkills(): Observable<SkillGroup[]> {\n        return this._http.get<SkillGroup[]>(`${this.URL_BACKEND}/skills/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Get the current list of technos (programming languages and framework) that i used.\n     */\n    getTechnos(): Observable<Techno[]> {\n        return this._http.get<Techno[]>(`${this.URL_BACKEND}/technos/cv/1`, { withCredentials: true });\n    }\n\n    /**\n     * Post to the back part of the application the mail from the visitor.\n     * The mail will be sent by the back part of the application to my personal email box.\n     *\n     * @param mail Object that contains the message from the visitor and his email address.\n     */\n    sendEmail(mail: EmailMessage): Observable<EmailMessage> {\n        return this._http.post<EmailMessage>(`${this.URL_BACKEND}/mail`, mail, { withCredentials: true });\n    }\n\n}\n","import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { SkillGroup } from './../../models/SkillGroup';\nimport { Component, OnInit, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { Skill } from 'src/app/models/Skill';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for creating a skill group and it's subsequent skills.\n */\n@Component({\n    selector: 'app-add-skill-group',\n    templateUrl: './add-skill-group.component.html',\n    styleUrls: ['./add-skill-group.component.css'],\n})\nexport class AddSkillGroupComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    newSkillGroup = new SkillGroup('', []);\n    newSkill = new Skill('');\n\n    @Output()\n    create = new EventEmitter<SkillGroup>(true);\n\n    circle = faCircle;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * This method is a helper to add new skills to a new skill group.\n     *\n     * @param newSkill a new skill of the new skill group\n     */\n    createSkillInGroup(): void {\n        const skill = new Skill(this.newSkill.title);\n        this.newSkillGroup.skills.push(skill);\n    }\n\n    /**\n     * Call a service to persist a new skill group.\n     */\n    createSkillGroup(): void {\n        this.privService.createSkillGroup(this.newSkillGroup)\n            .pipe(this._scavenger.collect())\n            .subscribe(\n                (skillGroup) => {\n                    this.newSkillGroup = new SkillGroup('', []);\n                    this.sucessMessage = `Le nouveau groupe de compétences ${skillGroup.title} a été créé avec succès.`;\n                    setInterval(() => {\n                        this.sucessMessage = undefined;\n                    }, 7000);\n                    this.create.emit(skillGroup);\n                },\n                () => {\n                    this.errorMessage =\n                        'Une erreur est survenue durant la création du groupe de compétences.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"newSkillGroup\">\n    <h4 class=\"sectionTitle colorTitle\">Créer une nouveau groupe de compétence</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form1=\"ngForm\" (ngSubmit)=\"createSkillGroup()\">\n        <div class=\"form-group\">\n            <label for=\"groupTitle\">Intitulé du groupe de compétences : </label>\n            <input type=\"text\" [(ngModel)]=\"newSkillGroup.title\" #groupTitle=\"ngModel\" class=\"form-control\" id=\"groupTitle\" name=\"groupTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(groupTitle.dirty || groupTitle.touched) && groupTitle.errors\">\n                Veuillez renseigner un nom pour le groupe de compétences (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"row mb-3\">\n            <div class=\"col-md-6\">\n                <div *ngIf=\"newSkillGroup.skills.length > 0 else empty;\">\n                    <ul *ngFor=\"let skill of newSkillGroup.skills;\" >\n                        <p><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon>{{ skill.title }}</p>\n                    </ul>\n                </div>\n                <ng-template #empty>\n                    <b>VIDE</b>\n                    <br>\n                </ng-template>\n            </div>\n            <div class=\"col-md-6 leftBorder\">\n                <form #skillForm=\"ngForm\" (ngSubmit)=\"createSkillInGroup()\">\n                    <div class=\"form-group\">\n                        <label for=\"skillTitle\">Compétence à ajouter : </label>\n                        <input type=\"text\" [(ngModel)]=\"newSkill.title\" #skillTitle=\"ngModel\" class=\"form-control\" id=\"skillTitle\" name=\"skillTitle\" required >\n                        <div class=\"alert alert-danger\" *ngIf=\"(skillTitle.dirty || skillTitle.touched) && skillTitle.errors\">\n                            Veuillez décrire la compétence à ajouter (Ce champ est obligatoire).\n                        </div>\n                    </div>\n                    <div class=\"text-center\">\n                        <button [disabled]=\"skillForm.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Ajouter la compétence</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form1.invalid || newSkillGroup.skills.length < 2\" type=\"submit\" class=\"btn btn-success btn-lg\">Ajouter le groupe</button>\n        </div>\n    </form>\n    <br>\n</div>\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { SkillGroup } from 'src/app/models/SkillGroup';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Component for deleting a skill group and it's subsequent skills.\n */\n@Component({\n    selector: 'app-delete-skill-group',\n    templateUrl: './delete-skill-group.component.html',\n    styleUrls: ['./delete-skill-group.component.css'],\n})\nexport class DeleteSkillGroupComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n\n    @Input()\n    skillGroup: SkillGroup;\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    trash = faTrashAlt;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Call a service to remove the selected skill group from the database.\n     * All the skills in this group will be removed by the operation.\n     */\n    deleteGroup(): void {\n        this.privService.deleteSkillGroup(this.skillGroup.id)\n            .pipe(this._scavenger.collect())\n            .subscribe(\n                () => {\n                    this.delete.emit('Le groupe de compétence a été supprimé avec succès.');\n                },\n                () => {\n                    this.errorMessage =\n                    'Une erreur est survenue durant la suppression du groupe de compétences.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<ng-template #tipContent>\n    Voulez vous supprimer ce groupe de compétence ?\n</ng-template>\n<button *ngIf=\"skillGroup\" type=\"button\" (click)=\"deleteGroup()\" class=\"btn btn-danger btn-lg\"><fa-icon [icon]=\"trash\" [ngbTooltip]=\"tipContent\" class=\"trashIcon\"></fa-icon></button>\n","import { SkillGroup } from './../../models/SkillGroup';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * Component to display a skill group and it's subsequent skills.\n */\n@Component({\n    selector: 'app-skill-group-display',\n    templateUrl: './skill-group-display.component.html',\n    styleUrls: ['./skill-group-display.component.css'],\n})\nexport class SkillGroupDisplayComponent implements OnInit {\n\n    @Input()\n    skillGroup: SkillGroup;\n\n    circle = faCircle;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<div *ngIf=\"skillGroup\" class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h5 class=\"sectionTitle colorTitle\">{{ skillGroup.title }}</h5>\n    </div>\n    <div class=\"card-body colorText\">\n        <ul *ngFor=\"let skill of skillGroup.skills\">\n            <p><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon>{{ skill.title }}</p>\n        </ul>\n    </div>\n</div>\n","import { PrivateServicesService } from './../services/private-services.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { SkillGroup } from '../models/SkillGroup';\nimport { EditMode } from '../models/EditMode';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n@Component({\n    selector: 'app-skills',\n    templateUrl: './skills.component.html',\n    styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    skills: SkillGroup[];\n\n    selectedSkillGroup: SkillGroup;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the list of skill groups with the new skill.\n     */\n    createSkillAlone(skillGroup: SkillGroup) {\n        this.skills.filter(group => group.id === skillGroup.id).map(group => group = skillGroup);\n    }\n\n    /**\n     * Update the list of skill groups when a new one has been created.\n     */\n    createSkillGroup(skillGroup: SkillGroup): void {\n        this.skills.push(skillGroup);\n    }\n\n    /**\n     * Update the skill groups list when a group or it's skills are modified.\n     */\n    updateSkillGroup(modifiedSkillGroup: SkillGroup): void {\n        this.skills.filter(group => group.id === modifiedSkillGroup.id).map(group => group = modifiedSkillGroup);\n    }\n\n    /**\n     * Update the list of skill groups after one of them has been deleted.\n     */\n    deleteGroup(message: string): void {\n        this.getSkills();\n        this.sucessMessage = message;\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Refresh the list of skill group when a skill has been deleted.\n     */\n    deleteSkill(skillGroup: SkillGroup): void {\n        this.skills.filter(group => group.id === skillGroup.id)\n            .map(group => group = skillGroup);\n    }\n\n    /**\n     * Get the list of the skill groups and their skills.\n     */\n    getSkills(): void {\n        this.service.getSkills().pipe(this._scavenger.collect()).subscribe(\n            skillGroupList => {\n                this.skills = skillGroupList;\n            },\n            () => {\n                this.errorMessage =\n                    'Une erreur est survenue durant la récupération des compétences.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        this.getSkills();\n    }\n\n    ngOnDestroy(): void {}\n\n}\n","<section *ngIf=\"!editMode\" class=\"card bg-light mb-3\">\n    <div class=\"card-header bg-dark\">\n        <h4 class=\"sectionTitle colorTitle\">Compétences</h4>\n    </div>\n    <div class=\"card-body row \">\n        <div *ngFor=\"let group of skills;\" class=\"col-xl-4 col-lg-6 col-sm-12\">\n            <app-skill-group-display [skillGroup]=\"group\"></app-skill-group-display>\n        </div>\n    </div>\n</section>\n\n<div *ngIf=\"editMode\" class=\"container mb-4\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <app-add-skill-group (create)=\"createSkillGroup($event)\"></app-add-skill-group>\n    <hr>\n    <div *ngIf=\"skills\">\n        <div class=\"mb-5\" ngbDropdown>\n            <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Sélectionnez l'élément à modifier</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                <button *ngFor=\"let group of skills;\" (click)=\"selectedSkillGroup = group\" ngbDropdownItem>{{ group.id}} - {{ group.title }}</button>\n            </div>\n        </div>\n        <app-update-skill-group [skillGroup]=\"selectedSkillGroup\" (createSkill)=\"createSkillAlone($event)\" (updateGroup)=\"updateSkillGroup($event)\" (deleteASkill)=\"deleteSkill($event)\" (delete)=\"deleteGroup($event)\"></app-update-skill-group>\n    </div>\n</div>\n","import { faCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, OnDestroy, Input, EventEmitter, Output } from '@angular/core';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { Skill } from 'src/app/models/Skill';\nimport { SkillGroup } from 'src/app/models/SkillGroup';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Component for updating a skill group and it's subsequent skills.\n * It can also add a new skill to the selected skill group.\n */\n@Component({\n    selector: 'app-update-skill-group',\n    templateUrl: './update-skill-group.component.html',\n    styleUrls: ['./update-skill-group.component.css'],\n})\nexport class UpdateSkillGroupComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notifications\n    errorMessage: string;\n    sucessMessage: string;\n\n    newAloneSkill = new Skill('');\n\n    @Input()\n    skillGroup: SkillGroup;\n\n    @Output()\n    updateGroup = new EventEmitter<SkillGroup>(true);\n\n    @Output()\n    createSkill = new EventEmitter<Skill>(true);\n\n    @Output()\n    deleteASkill = new EventEmitter<SkillGroup>(true);\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    circle = faCircle;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Create a new skill in an existing skill group.\n     */\n    createSkillAlone() {\n        this.privService.createSkill(this.newAloneSkill, this.skillGroup.id)\n            .pipe(this._scavenger.collect())\n            .subscribe(\n                s => {\n                    this.skillGroup.skills.push(s);\n                    this.sucessMessage = `La compétence << ${s.title} >> a été ajoutée au groupe.`;\n                    this.createSkill.emit(this.skillGroup);\n                },\n                () => {\n                    this.errorMessage =\n                    'Une erreur est survenue durant l\\'ajout de la nouvelle compétence.';\n                    setInterval(() => {\n                        this.sucessMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    /**\n     * Helper that replace the existing version of\n     * a skill by it's modified version in the lists of 'skills'.\n     *\n     * @param modifiedSkill a modified version of an existing skill\n     */\n    updateSkill(modifiedSkill: Skill): void {\n        this.skillGroup.skills.filter(skill => skill.id === modifiedSkill.id).map(s => s = modifiedSkill);\n    }\n\n    /**\n     * Call a service to persist the modifications done to an existing skill group.\n     */\n    updateSkillGroup(): void {\n        this.privService.updateSkillGroup(this.skillGroup)\n            .pipe(this._scavenger.collect())\n            .subscribe(\n                skillGroup => {\n                    this.sucessMessage = 'Le groupe de compétence a bien été mis à jour.';\n                    setInterval(() => {\n                        this.sucessMessage = undefined;\n                    }, 7000);\n                    this.updateGroup.emit(this.skillGroup);\n                },\n                () => {\n                    this.errorMessage =\n                    'Une erreur est survenue durant la modification du groupe de compétences.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    /**\n     * Call a service to remove a skill from a skill group.\n     * It will be deleted from the database.\n     *\n     * @param skill the skill to remove\n     */\n    deleteSkill(skill: Skill): void {\n        this.privService.deleteSkill(skill.id)\n            .pipe(this._scavenger.collect())\n            .subscribe(\n                () => {\n                    this.sucessMessage = 'La compétence a été retirée avec succès.';\n                    setInterval(() => {\n                        this.sucessMessage = undefined;\n                    }, 7000);\n                    const group = new SkillGroup(this.skillGroup.title, this.skillGroup.skills.filter(s => s.id !== skill.id));\n                    group.id = this.skillGroup.id;\n                    this.deleteASkill.emit(group);\n                    this.skillGroup = group;\n                },\n                () => {\n                    this.errorMessage =\n                    'Une erreur est survenue durant la suppression de la compétence.';\n                    setInterval(() => {\n                        this.errorMessage = undefined;\n                    }, 7000);\n                }\n            );\n    }\n\n    /**\n     * Send a delete event for skill group to the mother component.\n     *\n     * @param message the notification message sent by the delete component\n     */\n    deleteGroup(message: string) {\n        this.skillGroup = undefined;\n        this.delete.emit(message);\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"skillGroup\">\n    <h4 class=\"sectionTitle colorTitle\">Modifier ce groupe de compétences</h4>\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #updateGroupForm=\"ngForm\" (ngSubmit)=\"updateSkillGroup()\">\n        <div class=\"form-group\">\n            <label for=\"modifiedGroupTitle\">Intitulé du groupe de compétences : </label>\n            <input type=\"text\" [(ngModel)]=\"skillGroup.title\" #modifiedGroupTitle=\"ngModel\" class=\"form-control\" id=\"modifiedGroupTitle\" name=\"modifiedGroupTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(modifiedGroupTitle.dirty || modifiedGroupTitle.touched) && modifiedGroupTitle.errors\">\n                Veuillez fournir un titre pour groupe de compétences (Ce champ est obligatoire).\n            </div>\n        </div>\n        <br>\n        <ul *ngFor=\"let existingSkill of skillGroup.skills\">\n            <form #modifySkill=\"ngForm\" class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"modifiedSkillTitle\"><fa-icon [icon]=\"circle\" class=\"colorSectionIcon mr-3\"></fa-icon>Compétence à modifier : </label>\n                        <input type=\"text\" [(ngModel)]=\"existingSkill.title\" #modifiedSkillTitle=\"ngModel\" class=\"form-control\" id=\"modifiedSkillTitle\" name=\"modifiedSkillTitle\" required >\n                        <div class=\"alert alert-danger\" *ngIf=\"(modifiedSkillTitle.dirty || modifiedSkillTitle.touched) && modifiedSkillTitle.errors\">\n                            Veuillez décrire la compétence (Ce champ est obligatoire).\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-6\">\n                    <div class=\"text-center\">\n                        <button type=\"button\" (click)=\"updateSkill(existingSkill)\" class=\"btn btn-warning btn-lg\">Modifier la compétence</button>\n                    </div>\n                    <br>\n                    <div class=\"text-center\">\n                        <ng-template #tooltipContent>Etes-vous sûr de vouloir supprimer cette compétence ? La suppression est prise en compte immédiatement.</ng-template>\n                        <button type=\"button\" (click)=\"deleteSkill(existingSkill)\" [ngbTooltip]=\"tooltipContent\" class=\"btn btn-danger btn-lg\">Supprimer la compétence</button>\n                    </div>\n                </div>\n            </form>\n            <br>\n        </ul>\n        <form #addSkill=\"ngForm\" (ngSubmit)=\"createSkillAlone()\" class=\"mb-3\">\n            <div class=\"form-group\">\n                <label for=\"aloneSkillTitle\">Compétence à ajouter : </label>\n                <input type=\"text\" [(ngModel)]=\"newAloneSkill.title\" #aloneSkillTitle=\"ngModel\" class=\"form-control\" id=\"aloneSkillTitle\" name=\"aloneSkillTitle\" required >\n                <div class=\"alert alert-danger\" *ngIf=\"(aloneSkillTitle.dirty || aloneSkillTitle.touched) && aloneSkillTitle.errors\">\n                    Veuillez décrire la compétence à ajouter (Ce champ est obligatoire).\n                </div>\n            </div>\n            <div class=\"text-center\">\n                <ng-template #tooltipContent2>Il est nécessaire de modifier le groupe pour que l'ajout soit pris en compte.</ng-template>\n                <button [disabled]=\"addSkill.invalid\" type=\"submit\" [ngbTooltip]=\"tooltipContent2\" class=\"btn btn-success btn-lg\">Ajouter la compétence</button>\n            </div>\n        </form>\n        <div class=\"text-center\">\n            <p><button [disabled]=\"updateGroupForm.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg mr-3\">Modifier le groupe</button><app-delete-skill-group [skillGroup]=\"skillGroup\" (delete)=\"deleteGroup($event)\"></app-delete-skill-group></p>\n        </div>\n        <br>\n    </form>\n</div>\n","import { ManageImage } from './../../utils/manage-image';\nimport { Component, OnInit, OnDestroy, EventEmitter, Output } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { environment } from 'src/environments/environment';\nimport { Techno } from 'src/app/models/Techno';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\n\n/**\n * Component for creating a new techno logo. It\n * is composed from a path and an image.\n */\n@Component({\n    selector: 'app-add-techno',\n    templateUrl: './add-techno.component.html',\n    styleUrls: ['./add-techno.component.css'],\n})\nexport class AddTechnoComponent extends ManageImage implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    // Variables necessary to display or modify technos\n    basicUrl = `${environment.backendUrl}`;\n    newTechno = new Techno('', '', 2);\n\n    @Output()\n    create = new EventEmitter<Techno>(true);\n\n    constructor(private privService: PrivateServicesService) {\n        super();\n    }\n\n    /**\n     * Create a new techno and associate it\n     * with the new image (logo) that has been provided.\n     */\n    addNewTechno(): void {\n        this.formData.append('file', this.fileData);\n        this.privService.uploadImage(this.formData).pipe(this._scavenger.collect()).subscribe(\n            (image) => {\n                const newLogo = this.newTechno;\n                newLogo.imageId = image.id;\n                newLogo.logoPath = `/image/downloadFile/${newLogo.imageId}`;\n                this.privService.createTechno(newLogo).pipe(this._scavenger.collect()).subscribe(\n                    (techno) => {\n                        this.previewUrl = null;\n                        this.fileData = null;\n                        this.formData = new FormData();\n                        this.sucessMessage = 'La nouvelle techno a été créée avec succès.';\n                        setInterval(() => {\n                            this.sucessMessage = undefined;\n                        }, 7000);\n                        this.create.emit(techno);\n                    },\n                    () => {\n                        this.errorMessage = 'Une erreur est survenue durant la création de la nouvelle techno.';\n                        setInterval(() => {\n                            this.errorMessage = undefined;\n                        }, 7000);\n                    }\n                );\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue durant l\\'upload du nouveau logo.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"newTechno\">\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <form #form4=\"ngForm\" (ngSubmit)=\"addNewTechno()\">\n        <div class=\"form-group\">\n            <label for=\"logoTitle\">Nom de la nouvelle techno : </label>\n            <input type=\"text\" [(ngModel)]=\"newTechno.title\" #logoTitle=\"ngModel\" class=\"form-control\" id=\"logoTitle\" name=\"logoTitle\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(logoTitle.dirty || logoTitle.touched) && logoTitle.errors\">\n                Une techno a obligatoirement un nom.\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"logoOrder\">Ordre d'affichage de la nouvelle techno : </label>\n            <input type=\"number\" [(ngModel)]=\"newTechno.order\" #logoOrder=\"ngModel\" class=\"form-control\" id=\"logoOrder\" name=\"logoOrder\" required >\n            <div class=\"alert alert-danger\" *ngIf=\"(logoOrder.dirty || logoOrder.touched) && logoOrder.errors\">\n                Indiquer un ordre d'affichage du logo (ils sont affiché dans l'ordre croissant).\n            </div>\n        </div>\n        <div class=\"image-preview mb-3\" *ngIf=\"previewUrl\">\n            <img [src]=\"previewUrl\" height=\"300\" />\n        </div>\n        <div class=\"custom-file mb-3\">\n            <input type=\"file\" name=\"image\" (change)=\"fileProgress($event)\" class=\"custom-file-input\" id=\"fileInput\" />\n            <label class=\"custom-file-label\" for=\"fileInput\">Choisissez une image</label>\n        </div>\n        <div class=\"text-center\">\n            <button [disabled]=\"form4.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Ajouter</button>\n        </div>\n        <br>\n    </form>\n</div>\n","import { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { environment } from 'src/environments/environment';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { Techno } from 'src/app/models/Techno';\n\n/**\n * Component for removing a techno and it's logo froma the database.\n */\n@Component({\n    selector: 'app-delete-techno',\n    templateUrl: './delete-techno.component.html',\n    styleUrls: ['./delete-techno.component.css'],\n})\nexport class DeleteTechnoComponent implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    errorMessage: string;\n    sucessMessage: string;\n\n    // Variables necessary to display or modify technos\n    basicUrl = `${environment.backendUrl}`;\n\n    @Input()\n    techno: Techno;\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    trash = faTrashAlt;\n\n    constructor(private privService: PrivateServicesService) {}\n\n    /**\n     * Delete a techno and his logo.\n     */\n    deleteTechno(): void {\n        this.privService.deleteTechno(this.techno.id).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.privService.deleteImage(this.techno.imageId).pipe(this._scavenger.collect()).subscribe(\n                    () => {\n                        this.delete.emit(`La techno ${this.techno.title} a bien été supprimée.`);\n                    },\n                    () => {\n                        this.errorMessage = 'Une erreur est survenue durant la suppression du logo.';\n                        setInterval(() => {\n                            this.errorMessage = undefined;\n                        }, 7000);\n                    }\n                );\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue durant la suppression de la techno.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<ng-template #tipContent>\n    Voulez vous supprimer ce langage ou cet outil ?\n</ng-template>\n<button type=\"button\" *ngIf=\"techno\"  class=\"btn btn-danger btn-lg\" (click)=\"deleteTechno()\"><fa-icon [icon]=\"trash\" [ngbTooltip]=\"tipContent\" class=\"trashIcon\"></fa-icon></button>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Techno } from 'src/app/models/Techno';\n\n/**\n * Component for displaying a techno logo.\n */\n@Component({\n    selector: 'app-techno',\n    templateUrl: './techno.component.html',\n    styleUrls: ['./techno.component.css'],\n})\nexport class TechnoComponent implements OnInit {\n\n    basicUrl = `${environment.backendUrl}`;\n\n    @Input()\n    techno: Techno;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","<ng-template #tipContent>{{ techno.title }}</ng-template>\n<img *ngIf=\"techno\" src=\"{{ basicUrl + techno.logoPath }}\" alt=\"Logo de {{ techno.title }}\" [ngbTooltip]=\"tipContent\" class=\"technoIcon\" />\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PublicServicesService } from '../services/public-services.service';\nimport { Techno } from '../models/Techno';\nimport { EditMode } from '../models/EditMode';\nimport { PrivateServicesService } from '../services/private-services.service';\nimport { environment } from 'src/environments/environment';\nimport { Scavenger } from '@wishtack/rx-scavenger';\n\n/**\n * Display the logos of the various technos used in both personnal and professionnal projects.\n */\n@Component({\n    selector: 'app-technos',\n    templateUrl: './technos.component.html',\n    styleUrls: ['./technos.component.css']\n})\nexport class TechnosComponent extends EditMode implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    technos: Techno[];\n    selectedTechno: Techno;\n\n    constructor(private service: PublicServicesService) {\n        super();\n    }\n\n    /**\n     * Update the techno list after a nex one has been created.\n     */\n    addNewTechno(techno: Techno): void {\n        this.technos.push(techno);\n        this.technos.sort((a, b) => (a.order - b.order));\n    }\n\n    /**\n     * Update the list of technos when one's path has been modified.\n     */\n    updateLogoPath(modifiedTechno: Techno): void {\n        this.technos.filter(t => t.id === modifiedTechno.id).map(t => t = modifiedTechno);\n        this.technos.sort((a, b) => (a.order - b.order));\n    }\n\n    /**\n     * Delete a techno and his logo.\n     *\n     * @param techToDelete techno that will be deleted\n     */\n    deleteTechno(message: string): void {\n        this.getTechnos();\n        this.sucessMessage = message;\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Reload the page after an image has been modified. Images are stored in browser cache\n     * and the path of the image don't change. So it is necessary to reload\n     * to see the new image displayed.\n     */\n    updateImage(message: string): void {\n        location.reload();\n        this.sucessMessage = message;\n        setInterval(() => {\n            this.sucessMessage = undefined;\n        }, 7000);\n    }\n\n    /**\n     * Get the complete list of technos stored\n     * into the database\n     */\n    getTechnos(): void {\n        this.service.getTechnos().pipe(this._scavenger.collect()).subscribe(\n            technoList => {\n                this.technos = technoList;\n                this.technos.sort((a, b) => (a.order - b.order));\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue durant la récupération de la liste des technos.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    ngOnInit(): void {\n        this.getTechnos();\n    }\n\n    ngOnDestroy(): void {}\n\n}\n","<section *ngIf=\"!editMode\" class=\"card bg-dark mb-3\">\n    <div class=\"card-header\">\n        <h4 class=\"sectionTitle\">Langages et outils</h4>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n            <p><strong>{{ errorMessage }}</strong></p>\n        </div>\n        <div *ngFor=\"let tech of technos;\" class=\"inlineLogos p-2\">\n            <app-techno [techno]=\"tech\"></app-techno>\n        </div>\n    </div>\n</section>\n\n<div *ngIf=\"editMode\" class=\"container\">\n    <h4 class=\"sectionTitle colorTitle\">Ajouter un langage ou un outil</h4>\n    <br>\n    <div class=\"alert alert-succes text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <app-add-techno (create)=\"addNewTechno($event)\"></app-add-techno>\n    <hr>\n    <h4 class=\"sectionTitle colorTitle\">Editer un langage ou un outil</h4>\n    <br>\n    <div *ngIf=\"technos\" class=\"mb-5\" ngbDropdown>\n        <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>Sélectionnez l'élément à modifier</button>\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n            <button *ngFor=\"let tech of technos;\" (click)=\"selectedTechno = tech\" ngbDropdownItem>{{ tech.order }} - {{ tech.title }}</button>\n        </div>\n    </div>\n    <div *ngIf=\"selectedTechno\">\n        <app-techno [techno]=\"selectedTechno\"></app-techno>\n        <app-update-techno [techno]=\"selectedTechno\" (update)=\"updateLogoPath($event)\" (updateLogoImage)=\"updateImage($event)\" (delete)=\"deleteTechno($event)\"></app-update-techno>\n        <br>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { PrivateServicesService } from 'src/app/services/private-services.service';\nimport { Techno } from 'src/app/models/Techno';\nimport { environment } from 'src/environments/environment';\nimport { Scavenger } from '@wishtack/rx-scavenger';\nimport { ManageImage } from 'src/app/utils/manage-image';\n\n/**\n * Component to update the techno title, path or\n * the logo image.\n */\n@Component({\n    selector: 'app-update-techno',\n    templateUrl: './update-techno.component.html',\n    styleUrls: ['./update-techno.component.css'],\n})\nexport class UpdateTechnoComponent extends ManageImage implements OnInit, OnDestroy {\n\n    private _scavenger = new Scavenger(this);\n\n    // Notification messages\n    sucessMessage: string;\n    errorMessage: string;\n\n    // Variables necessary to display or modify technos\n    basicUrl = `${environment.backendUrl}`;\n\n    @Input()\n    techno: Techno;\n\n    @Output()\n    update = new EventEmitter<Techno>(true);\n\n    @Output()\n    updateLogoImage = new EventEmitter<string>(true);\n\n    @Output()\n    delete = new EventEmitter<string>(true);\n\n    constructor(private privService: PrivateServicesService) {\n        super();\n    }\n\n    /**\n     * Update a techno logo path.\n     */\n    updateLogoPath(): void {\n        this.privService.updateTechno(this.techno).pipe(this._scavenger.collect()).subscribe(\n            (techno) => {\n                this.sucessMessage = `La techno ${techno.title} a été mise à jour avec succès.`;\n                setInterval(() => {\n                    this.sucessMessage = undefined;\n                }, 7000);\n                this.update.emit(techno);\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue durant la modification de la techno.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Update the logo of a techno.\n     */\n    updateImage(): void {\n        this.formData.append('file', this.fileData);\n        this.privService.updateImage(this.formData, this.techno.imageId).pipe(this._scavenger.collect()).subscribe(\n            () => {\n                this.updateLogoImage.emit('La photo de profil a été modifiée avec succès.');\n            },\n            () => {\n                this.errorMessage = 'Une erreur est survenue durant la modification du logo.';\n                setInterval(() => {\n                    this.errorMessage = undefined;\n                }, 7000);\n            }\n        );\n    }\n\n    /**\n     * Send a delete event to the mother component.\n     *\n     * @param message the notification message emit by the delete component\n     */\n    deleteTechno(message: string) {\n        this.techno = undefined;\n        this.delete.emit(message);\n    }\n\n    ngOnInit(): void {}\n    ngOnDestroy(): void {}\n}\n","<div *ngIf=\"techno\">\n    <br>\n    <div class=\"alert alert-danger text-center\" *ngIf=\"errorMessage\">\n        <p><strong>{{ errorMessage }}</strong></p>\n    </div>\n    <div class=\"alert alert-success text-center\" *ngIf=\"sucessMessage\">\n        <p><strong>{{ sucessMessage }}</strong></p>\n    </div>\n    <br>\n    <form #form=\"ngForm\" (ngSubmit)=\"updateLogoPath()\">\n        <div class=\"form-group\">\n            <label for=\"titleLogo\">Nom de la techno : </label>\n            <input type=\"text\" [(ngModel)]=\"techno.title\" #titleLogo=\"ngModel\" class=\"form-control\" id=\"titleLogo\" name=\"titleLogo\" required />\n            <div class=\"alert alert-danger\" *ngIf=\"(titleLogo.dirty || titleLogo.touched) && titleLogo.errors\">\n                Une techno a obligatoirement un nom (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"logo\">Nouveau chemin du logo : </label>\n            <input type=\"text\" [(ngModel)]=\"techno.logoPath\" #logo=\"ngModel\" class=\"form-control\" id=\"logo\" name=\"logo\" required />\n            <div class=\"alert alert-danger\" *ngIf=\"(logo.dirty || logo.touched) && logo.errors\">\n                Le chemin du nouveau logo est invalide (Ce champ est obligatoire).\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"updatedlogoOrder\">\n                Ordre d'affichage de la techno :\n            </label>\n            <input type=\"number\" [(ngModel)]=\"techno.order\" #updatedlogoOrder=\"ngModel\" class=\"form-control\" id=\"updatedlogoOrder\" name=\"updatedlogoOrder\" required />\n            <div class=\"alert alert-danger\" *ngIf=\"(updatedlogoOrder.dirty || updatedlogoOrder.touched) && updatedlogoOrder.errors\">\n                Indiquer un ordre d'affichage du logo (ils sont affiché dans l'ordre croissant).\n            </div>\n        </div>\n        <br />\n        <div class=\"text-center\">\n            <p><button [disabled]=\"form.invalid\" type=\"submit\" class=\"btn btn-warning btn-lg mr-3\">Modifier</button><app-delete-techno [techno]=\"techno\" (delete)=\"deleteTechno($event)\"></app-delete-techno></p>\n        </div>\n    </form>\n    <br>\n    <form #form3=\"ngForm\" (ngSubmit)=\"updateImage()\">\n        <h4 class=\"sectionTitle colorTitle\">Choisir une nouvelle image :</h4>\n        <br>\n        <div class=\"image-preview mb-3\" *ngIf=\"previewUrl\">\n            <img [src]=\"previewUrl\" height=\"300\" />\n        </div>\n        <div class=\"custom-file mb-3\">\n            <input type=\"file\" name=\"image\" (change)=\"fileProgress($event)\" class=\"custom-file-input\" id=\"fileInput\" />\n            <label class=\"custom-file-label\" for=\"fileInput\">Choisissez un fichier</label>\n        </div>\n        <div class=\"form-group text-center\">\n            <button [disabled]=\"form3.invalid\" type=\"submit\" class=\"btn btn-success btn-lg\">Télécharger</button>\n        </div>\n    </form>\n</div>\n","export class ManageImage {\n\n    constructor(public fileData: File = null, public previewUrl: any = null, public formData = new FormData()) {}\n\n    /**\n     * Display upload progress\n     *\n     */\n    fileProgress(fileInput: any) {\n        this.fileData = fileInput.target.files[0] as File;\n        this.preview();\n    }\n\n    /**\n     * Display the new image preview\n     */\n    preview() {\n        const mimeType = this.fileData.type;\n        if (mimeType.match(/image\\/*/) == null) {\n            return;\n        }\n        const reader = new FileReader();\n        reader.readAsDataURL(this.fileData);\n        reader.onload = (_event) => {\n            this.previewUrl = reader.result;\n        };\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    backendUrl: `http://localhost:8080`\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}